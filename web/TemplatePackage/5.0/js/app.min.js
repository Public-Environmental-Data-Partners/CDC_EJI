/**
 * @version 4.25.5
 * Date: 2025-05-29T23:13:42.715Z
 */
"use strict";

function _slicedToArray(e, t) {
    return _arrayWithHoles(e) || _iterableToArrayLimit(e, t) || _unsupportedIterableToArray(e, t) || _nonIterableRest()
}

function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
}

function _iterableToArrayLimit(e, t) {
    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (null != n) {
        var a, o, i, r, s = [],
            l = !0,
            c = !1;
        try {
            if (i = (n = n.call(e)).next, 0 === t) {
                if (Object(n) !== n) return;
                l = !1
            } else
                for (; !(l = (a = i.call(n)).done) && (s.push(a.value), s.length !== t); l = !0);
        } catch (e) {
            c = !0, o = e
        } finally {
            try {
                if (!l && null != n.return && (r = n.return(), Object(r) !== r)) return
            } finally {
                if (c) throw o
            }
        }
        return s
    }
}

function _arrayWithHoles(e) {
    if (Array.isArray(e)) return e
}

function _createForOfIteratorHelper(e, t) {
    var n, a, o, i, r = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
    if (r) return a = !(n = !0), {
        s: function() {
            r = r.call(e)
        },
        n: function() {
            var e = r.next();
            return n = e.done, e
        },
        e: function(e) {
            a = !0, o = e
        },
        f: function() {
            try {
                n || null == r.return || r.return()
            } finally {
                if (a) throw o
            }
        }
    };
    if (Array.isArray(e) || (r = _unsupportedIterableToArray(e)) || t && e && "number" == typeof e.length) return r && (e = r), i = 0, {
        s: t = function() {},
        n: function() {
            return i >= e.length ? {
                done: !0
            } : {
                done: !1,
                value: e[i++]
            }
        },
        e: function(e) {
            throw e
        },
        f: t
    };
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
}

function _classCallCheck(e, t) {
    if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
}

function _defineProperties(e, t) {
    for (var n = 0; n < t.length; n++) {
        var a = t[n];
        a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, _toPropertyKey(a.key), a)
    }
}

function _createClass(e, t, n) {
    return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), Object.defineProperty(e, "prototype", {
        writable: !1
    }), e
}

function _defineProperty(e, t, n) {
    return (t = _toPropertyKey(t)) in e ? Object.defineProperty(e, t, {
        value: n,
        enumerable: !0,
        configurable: !0,
        writable: !0
    }) : e[t] = n, e
}

function _toPropertyKey(e) {
    e = _toPrimitive(e, "string");
    return "symbol" === _typeof(e) ? e : String(e)
}

function _toPrimitive(e, t) {
    if ("object" !== _typeof(e) || null === e) return e;
    var n = e[Symbol.toPrimitive];
    if (void 0 === n) return ("string" === t ? String : Number)(e);
    n = n.call(e, t || "default");
    if ("object" !== _typeof(n)) return n;
    throw new TypeError("@@toPrimitive must return a primitive value.")
}

function _toConsumableArray(e) {
    return _arrayWithoutHoles(e) || _iterableToArray(e) || _unsupportedIterableToArray(e) || _nonIterableSpread()
}

function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
}

function _unsupportedIterableToArray(e, t) {
    var n;
    if (e) return "string" == typeof e ? _arrayLikeToArray(e, t) : "Map" === (n = "Object" === (n = Object.prototype.toString.call(e).slice(8, -1)) && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? _arrayLikeToArray(e, t) : void 0
}

function _iterableToArray(e) {
    if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
}

function _arrayWithoutHoles(e) {
    if (Array.isArray(e)) return _arrayLikeToArray(e)
}

function _arrayLikeToArray(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, a = new Array(t); n < t; n++) a[n] = e[n];
    return a
}

function _typeof(e) {
    return (_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
        return typeof e
    } : function(e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    })(e)
}
window.CDC = window.CDC || {}, CDC.Common = {}, CDC.Common.runtime = CDC.Common.runtime || {}, CDC.Common.cleanHTML = function(e) {
    return "function" != typeof window.DOMPurify ? e : DOMPurify.sanitize(e)
}, CDC.Common.cleanAttr = function(e) {
    return String(e).trim().replace(/&/g, "&amp;").replace(/'/g, "&apos;").replace(/"/g, "&quot;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/\r\n/g, "").replace(/[\r\n]/g, "")
}, CDC.Common.cleanUrl = function(e, t) {
    var n;
    if (t = void 0 === t ? "about:blank" : t, !e) return t;
    e = String(e).replace(/[^\x20-\x7E]/gim, "").replace(/[^-A-Za-z0-9+&@#/%?=~_|!:,.;\(\){}']+/g, "").trim();
    try {
        n = decodeURI(e)
    } catch (e) {
        return t
    }
    return /<script/im.test(n) || (n = e.match(/^([^:]+):/gm)) && (n = n[0], /^(%20|\s)*(javascript|data)/im.test(n)) ? t : e
}, CDC.Common.normalizeUrl = function(e) {
    var t = "index.html|index.htm|default.htm|default.asp|default.html".split("|"),
        e = CDC.Common.parseUrl(e),
        e = String(e.pathname || "").trim(),
        n = "",
        a = e.match(/[^\/]+\.[^\/]{2,4}$/);
    return a && (n = a[0], e = e.replace(/[^\/]+\.[^\/]{2,4}$/, "")), t.includes(n.trim().toLowerCase()) && (n = ""), "".concat(e).concat(n).toLowerCase()
}, CDC.Common.parseJSON = function(t, e) {
    var n, a = {};
    try {
        return "object" === _typeof(n = $.parseJSON(String(t))) && Array.isArray(e) ? e.forEach(function(e) {
            n.hasOwnProperty(e) && (a[e] = n[e])
        }) : a = n, a
    } catch (e) {
        return console.info("can't parse JSON string: ", t), null
    }
}, CDC.Common.open = function(e, t) {
    (e = CDC.Common.cleanUrl(e, !1)) ? t ? (t = _typeof(t) ? t : null, window.open(e, t)) : location.href = e: console.error("URL is blank. ", e)
}, CDC.Common.loadScript = function(e, t) {
    var n, a, o;
    (e = Array.isArray(e) ? e : [e]).length ? (o = e.shift(), n = document.createElement("script"), a = document.getElementsByTagName("head")[0], (o = CDC.Common.cleanUrl(o, !1)) && 0 < o.length && (n.src = o, o = function() {
        if (!e.length) return void 0 !== t ? t() : void 0;
        CDC.Common.loadScript(e, t)
    }, n.addEventListener ? n.addEventListener("load", o, !1) : n.readyState && (n.onreadystatechange = o), a.appendChild(n))) : t()
}, CDC.Common.loadJS = CDC.Common.loadScript, CDC.Common.typeof = function(e) {
    return Array.isArray(e) ? "array" : _typeof(e)
}, CDC.Common.toArray = function(e) {
    return Array.isArray(e) ? e : null == e ? [] : [e]
}, CDC.Common.loadCss = function(e, a) {
    (e = Array.isArray(e) ? e : [e]).forEach(function(e) {
        var t = document.createElement("link"),
            n = CDC.Common.getSafeHostName(),
            e = CDC.Common.parseUrl(e).pathname;
        t.href = "//" + n + e, t.type = "text/css", t.rel = "stylesheet", t.media = CDC.Common.cleanAttr(a || "print,screen"), document.getElementsByTagName("head")[0].appendChild(t)
    })
}, CDC.Common.loadCSS = CDC.Common.loadCss, CDC.Common.cleanString = function(e) {
    return (e = String(e || "")).replace("\t", "").replace("\r", "").replace("\n", "")
}, CDC.Common.s4 = function() {
    return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
}, CDC.Common.guid = function() {
    return CDC.Common.s4() + CDC.Common.s4() + "-" + CDC.Common.s4() + "-" + CDC.Common.s4() + "-" + CDC.Common.s4() + "-" + CDC.Common.s4() + CDC.Common.s4() + CDC.Common.s4()
}, CDC.Common.replaceAll = function(e, t, n) {
    return e = "|" === e ? new RegExp("\\|", "g") : new RegExp(e, "g"), n.replace(e, t)
}, CDC.Common.getSafeHostName = function() {
    var e = CDC.Common.parseUrl().host,
        t = CDC.Common.getCallParam("cHost") || CDC.Common.getCallParam("host") || !1;
    return e = t && (t = CDC.Common.parseUrl("//" + t).hostname).match(/\.cdc\.gov$/i) ? t : e
}, CDC.Common.isWCMS = function(e) {
    return !!(e = String(void 0 === e ? window.location.href : e).trim()) && !!((e = CDC.parseUrl(e).host) && (e.match(/^(vvv|localhost)/i) || (e = e.match(/^(.*)\.cdc\.gov$/)) && e[1].match(/(^wcms-wp|^www\b|wwwdev|wwwlink|^atsdr)/i)))
}, CDC.Common.parseUrl = function(e) {
    var t, n, a, o = document.createElement("a"),
        i = {};
    for (o.href = CDC.Common.cleanUrl(e || location.href, ""), t = o.search.replace(/^\?/, "").split("&"), a = 0; a < t.length; a++) i[(n = t[a].split("="))[0]] = 2 <= n.length ? n[1] : "";
    e = String(o.pathname);
    return "/" !== e.charAt(0) && (e = "/" + e), {
        protocol: o.protocol,
        host: o.host,
        hostname: o.hostname,
        port: o.port,
        pathname: e,
        search: o.search,
        searchObject: i,
        params: i,
        hash: o.hash
    }
}, CDC.Common.getHash = function() {
    return Math.floor(65536 * (1 + Math.random())).toString(16)
}, CDC.Common.cdcUrl = function(e) {
    e = CDC.Common.parseUrl(e).hostname.toLowerCase();
    return "cdc.gov" === e || "localhost" === e || "127.0.0.1" === e || RegExp(".cdc.gov$").test(e) || RegExp(".wcms$").test(e)
}, CDC.Common.getLocalStorageApi = function(e) {
    var t = e,
        n = {
            val: function() {
                try {
                    if (void 0 !== window.localStorage) {
                        var e = window.localStorage[t];
                        if (e) return JSON.parse(e)
                    }
                } catch (e) {}
            },
            save: function(e) {
                n.valueType = _typeof(e), "object" === n.valueType && "[object Array]" === Object.prototype.toString.call(e) && (n.valueType = "array");
                try {
                    void 0 !== window.localStorage && (window.localStorage[t] = JSON.stringify(e))
                } catch (e) {}
            },
            clear: function() {
                try {
                    void 0 !== window.localStorage && window.localStorage.removeItem(t)
                } catch (e) {}
            }
        };
    return n
}, CDC.Common.cloneShallow = function(e) {
    var t = null;
    switch (CDC.Common.typeof(e)) {
        case "array":
            t = e.slice(0);
            break;
        case "object":
            t = Object.assign({}, e);
            break;
        default:
            t = e
    }
    return t
}, CDC.Common.cloneDeep = function(e, t) {
    void 0 === t && (t = !0);
    var n = null;
    switch (CDC.Common.typeof(e)) {
        case "object":
            var a, n = {};
            for (a in e) !e.hasOwnProperty(a) && t || (n[a] = CDC.Common.cloneDeep(e[a]));
            break;
        case "array":
            n = e.slice(0);
            break;
        default:
            n = e
    }
    return n
}, CDC.Common.mergeShallow = function(e, t) {
    return Object.assign(CDC.Common.cloneShallow(e), CDC.Common.cloneShallow(t))
}, CDC.Common.dateDiff = {
    inDays: function(e, t) {
        t = t.getTime(), e = e.getTime();
        return parseInt((t - e) / 864e5)
    },
    inWeeks: function(e, t) {
        t = t.getTime(), e = e.getTime();
        return parseInt((t - e) / 6048e5)
    },
    inMonths: function(e, t) {
        var n = e.getFullYear(),
            a = t.getFullYear(),
            e = e.getMonth();
        return (t.getMonth() + 12) * a - (e + 12) * n
    },
    inYears: function(e, t) {
        return t.getFullYear() - e.getFullYear()
    }
}, CDC.Common.parseQueryString = function(e) {
    var t = {};
    if ((e = 0 === e.indexOf("?") ? e.substring(1) : e).length)
        for (var n = e.split("&"), a = n.length; a--;) {
            var o = n[a].split("=");
            t[o[0]] = o[1]
        }
    return t
}, CDC.Common.numberWithCommas = function(e) {
    return String(e).replace(/\B(?=(\d{3})+(?!\d))/g, ",")
}, CDC.Common.getCallParam = (CDC.Common.runtime.callParams || (CDC.Common.runtime.callParams = CDC.Common.parseQueryString(window.location.search)), function(e, t, n) {
    t = void 0 === t || t;
    n = (n ? CDC.Common.parseQueryString(n) : CDC.Common.runtime.callParams)[e] || null;
    return t && null !== n ? decodeURIComponent(n) : n
}), CDC.Common.getParam = function(e) {
    var t = window.location.href;
    e = e.replace(/[\[\]]/g, "\\$&");
    e = new RegExp("[?&]" + e + "(=([^&#]*)|&|#|$)").exec(t);
    return e ? e[2] ? decodeURIComponent(e[2].replace(/\+/g, " ")).replace(/[<>]/g, "") : "" : null
}, CDC.Common.getParamSwitch = function(e, t) {
    e = CDC.Common.getParam(e);
    return "string" != typeof e ? Boolean(t) : "" === e || CDC.Common.toBoolean(e)
}, CDC.Common.toBoolean = function(e) {
    return (e = String(e).trim().toLowerCase()).match(/^\d+$/) ? Boolean(parseInt(e, 10)) : !e.match(/^(n|no|f|false|off)$/)
}, CDC.Common.debounce = function(a, o, i) {
    var r;
    return function() {
        var e = this,
            t = arguments,
            n = i && !r;
        clearTimeout(r), r = setTimeout(function() {
            r = null, i || a.apply(e, t)
        }, o), n && a.apply(e, t)
    }
}, CDC.Common.debouncer = function(n, a) {
    var o;
    return function() {
        var e = this,
            t = arguments;
        clearTimeout(o), o = setTimeout(function() {
            return n.apply(e, t)
        }, a)
    }
}, CDC.Common.throttle = function(e, t) {
    var n = Date.now();
    return function() {
        n + t - Date.now() < 0 && (e(), n = Date.now())
    }
}, CDC.Common.stripTags = function(e, n) {
    n = (String(n || "").toLowerCase().match(/<[a-z][a-z0-9]*>/g) || []).join("");
    return String(e).replace(/<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi, "").replace(/(<\w+(?:\s+\w+=\"[^"]+\")*)(?=[^>]+(?:<|$))/g, "").replace(/<\/?([a-z][a-z0-9]*)\b[^>]*>/gi, function(e, t) {
        return -1 < n.indexOf("<" + t.toLowerCase() + ">") ? e : ""
    })
}, CDC.Common.titleCase = function(e) {
    return String(e).toLowerCase().split(" ").map(function(e) {
        return e.charAt(0).toUpperCase() + e.slice(1)
    }).join(" ")
}, CDC.Common.capitalize = function(e) {
    return String(e).charAt(0).toUpperCase() + String(e).slice(1)
}, CDC.Common.arrayDiff = function(e, t) {
    if (!Array.isArray(e)) return [];
    Array.isArray(t) || (t = [t]);
    var n = e.slice();
    return $.each(t, function(e, t) {
        t = n.indexOf(t); - 1 < t && n.splice(t, 1)
    }), n
}, CDC.Common.unique = function(e) {
    return Array.isArray(e) ? (e = e.filter(function(e) {
        return Boolean(e)
    })).filter(function(e, t, n) {
        return t === n.indexOf(e)
    }) : []
}, CDC.Common.arrayUnique = CDC.Common.unique, CDC.Common.lpad = function(e, t, n) {
    for (e = String(e), n = n ? String(n).charAt(0) : "0", t = t || 2; e.length < t;) e = n + e;
    return e
}, CDC.Common.isProd = function() {
    return !CDC.parseUrl().hostname.match(/local|vvv|dev|test|stage|prototype/)
}, CDC.Common.compareVersion = function(e, t) {
    if ("string" != typeof e) return !1;
    if ("string" != typeof t) return !1;
    e = e.split("."), t = t.split(".");
    for (var n = Math.min(e.length, t.length), a = 0; a < n; ++a) {
        if (e[a] = parseInt(e[a], 10), t[a] = parseInt(t[a], 10), e[a] > t[a]) return 1;
        if (e[a] < t[a]) return -1
    }
    return e.length === t.length ? 0 : e.length < t.length ? -1 : 1
}, window.$ && window.$.fn && ($.fn.safehtml = function() {
    var e = arguments;
    return e.length && "string" == typeof e[0] && (e[0] = CDC.Common.cleanHTML(e[0])), $.fn.html.apply(this, e)
}, $.fn.safeappend = function() {
    var e = arguments;
    return e.length && "string" == typeof e[0] && (e[0] = CDC.Common.cleanHTML(e[0])), $.fn.append.apply(this, e)
}), CDC.tpPath = function() {
    for (var e = document.getElementsByTagName("script"), t = 0; t < e.length; t++) {
        var n = String(e[t].getAttribute("src"));
        if (-1 < n.indexOf("/TemplatePackage")) return String(n).replace(/\/TemplatePackage\/.*/, "")
    }
    return ""
}(), CDC.Common.isElement = function(e) {
    return "object" === _typeof(e) && e && e.nodeType && e.nodeType === Node.ELEMENT_NODE
}, CDC.Common.make = function(e) {
    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "",
        n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : {},
        a = 3 < arguments.length ? arguments[3] : void 0,
        o = document.createElement(e),
        e = String(Array.isArray(t) ? t.join(" ") : t).trim();
    if (e && (t = e.split(/\s+/), (e = o.classList).add.apply(e, _toConsumableArray(t))), "object" === _typeof(n))
        for (var i in n) o[i] = n[i], o.setAttribute(i, n[i]);
    return a && (CDC.Common.isElement(a) ? o.append(a) : o.innerHTML = a), o
}, CDC.Common.getCookie = function(e) {
    for (var t = e + "=", n = decodeURIComponent(document.cookie).split(";"), a = 0; a < n.length; a++) {
        var o = n[a].trim();
        if (0 === o.indexOf(t)) return o.substring(t.length, o.length)
    }
    return null
}, CDC.config = Object.assign({}, window.CDC_WEB_CONFIG, window.CDC_CONFIG), CDC.isProd = CDC.Common.isProd, CDC.getParam = CDC.Common.getParam, CDC.open = CDC.Common.open, CDC.parseUrl = CDC.Common.parseUrl, CDC.cleanUrl = CDC.Common.cleanUrl, CDC.cleanHTML = CDC.Common.cleanHTML, CDC.cleanAttr = CDC.Common.cleanAttr, CDC.debug = CDC.Common.getParamSwitch("cdcdebug", !1), CDC.make = CDC.Common.make, CDC.getCookie = CDC.Common.getCookie, "function" != typeof window.DOMPurify && CDC.Common.loadScript("https://www.cdc.gov/TemplatePackage/contrib/libs/dompurify/latest/purify.min.js");
var CDCEvents = function() {
        function e() {
            _classCallCheck(this, e), _defineProperty(this, "_events", {}), _defineProperty(this, "_queues", {}), _defineProperty(this, "_all", []), _defineProperty(this, "RUNONCE_EVENTS", ["init", "ready", "navLoaded"]), _defineProperty(this, "_pastEvents", [])
        }
        return _createClass(e, [{
            key: "on",
            value: function(e, t) {
                var n = this;
                "function" == typeof t && (Array.isArray(e) && (e = e.join(" ")), CDC.Common.cleanString(e).trim().split(/[ ,]+/).forEach(function(e) {
                    if (e = CDC.Common.cleanString(e)) return n._events[e] || (n._events[e] = []), "now" === e || (n._events[e].push(t), n.RUNONCE_EVENTS.includes(e) && n._pastEvents.includes(e)) ? t() : void 0
                }))
            }
        }, {
            key: "once",
            value: function(e, t) {
                var n = this;
                Array.isArray(e) && (e = e.join(" ")), CDC.Common.cleanString(e).trim().split(/[ ,]+/).forEach(function(e) {
                    (e = CDC.Common.cleanString(e)) && (n._queues[e] || (n._queues[e] = []), n._queues[e].push(t))
                })
            }
        }, {
            key: "onAll",
            value: function(e) {
                this._all.push(e)
            }
        }, {
            key: "emit",
            value: function(t, n) {
                if (!(t = CDC.Common.cleanString(t))) return t;
                Array.isArray(this._events[t]) && this._events[t].forEach(function(e) {
                    "function" == typeof e && e(n)
                }), Array.isArray(this._queues[t]) && (this._queues[t].forEach(function(e) {
                    "function" == typeof e && e(n)
                }), this._queues[t] = []), Array.isArray(this._all) && this._all.forEach(function(e) {
                    "function" == typeof e && e(t, n)
                }), this._pastEvents.push(t)
            }
        }]), e
    }(),
    CDCModal = function() {
        function o(e) {
            var a = this,
                t = (_classCallCheck(this, o), _defineProperty(this, "element", void 0), _defineProperty(this, "nodes", {}), _defineProperty(this, "modal", void 0), _defineProperty(this, "isOpen", !1), _defineProperty(this, "config", {}), e = Object.assign({}, o.defaultConfig, e), (this.config = e).id || (e.id = "modal-".concat(CDC.Common.getHash())), ["modal", "fade"]);
            e.className && (Array.isArray(e.className) ? t = t.concat(e.className) : t.push(e.className)), this.element = CDC.Common.make("div", t.join(" "), {
                id: e.id,
                "aria-labelledby": "".concat(e.id, "-title"),
                "aria-hidden": !0,
                tabindex: -1
            }, '\n\t\t\t<div class="modal-dialog '.concat(e.size, '">\n\t\t\t\t<div class="modal-content">\n\t\t\t\t\t<div class="modal-header">\n\t\t\t\t\t\t<h2 class="modal-title" id="').concat(e.id, '-title"></h2>\n\t\t\t\t\t\t<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"><span class="cdc-icon-close"></span></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="modal-body">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="modal-footer">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t')), document.body.append(this.element), this.nodes = {
                header: this.element.querySelector(".modal-header"),
                title: this.element.querySelector(".modal-title"),
                body: this.element.querySelector(".modal-body"),
                footer: this.element.querySelector(".modal-footer")
            }, this.nodes.title.innerHTML = CDC.Common.cleanHTML((e.title || "").trim()), this.nodes.body.innerHTML = CDC.Common.cleanHTML(String(e.message || "").trim()), Array.isArray(this.config.buttons) && this.config.buttons.forEach(function(e) {
                e = Object.assign({}, o.buttonConfig, e);
                var t, n = ["btn"],
                    n = (Array.isArray(e.className) && (n = n.concat(e.className)), "string" == typeof e.className && n.push(e.className), CDC.Common.make("button", n, {}, e.text));
                "function" == typeof e.onClick && n.addEventListener("click", function() {
                    return e.onClick()
                }), e.closeOnClick && n.addEventListener("click", function() {
                    return a.close()
                }), null != (t = a.nodes.footer) && t.append(n)
            }), this.modal = new bootstrap.Modal(this.element), this.element.addEventListener("shown.bs.modal", function() {
                a.isOpen = !0
            }), this.element.addEventListener("hidden.bs.modal", function() {
                a.isOpen = !1
            }), e.header || this.nodes.header.remove(), e.footer || this.nodes.footer.remove(), e.open && this.modal.show()
        }
        return _createClass(o, [{
            key: "show",
            value: function() {
                this.modal.show()
            }
        }, {
            key: "open",
            value: function() {
                this.modal.show()
            }
        }, {
            key: "hide",
            value: function() {
                this.modal.hide()
            }
        }, {
            key: "close",
            value: function() {
                this.modal.hide()
            }
        }]), o
    }(),
    CDCTooltip = (_defineProperty(CDCModal, "defaultConfig", {
        open: !0,
        title: "Notice",
        className: [],
        id: null,
        size: "",
        message: "",
        buttons: [{
            text: "Close",
            className: "btn-secondary"
        }],
        header: !0,
        footer: !0
    }), _defineProperty(CDCModal, "buttonConfig", {
        text: "",
        className: "",
        closeOnClick: !0,
        onClick: null
    }), function() {
        function a(e, t) {
            var n = this;
            if (_classCallCheck(this, a), _defineProperty(this, "element", void 0), _defineProperty(this, "nodes", {}), _defineProperty(this, "modal", void 0), _defineProperty(this, "isOpen", !1), _defineProperty(this, "holdOpen", !1), _defineProperty(this, "config", {}), (t = Object.assign({}, a.defaultConfig, t)).title = String(t.title || "").trim(), t.message = String(t.message || "").trim(), !(e instanceof HTMLElement)) return console.error("targetElement not html element:", e);
            this.targetElement = e, t.id || (t.id = "tooltip-".concat(CDC.Common.getHash())), this.config = t;
            e = ["cdc-tooltip", "fade", "cdc-tooltip--".concat(t.align)];
            t.top && e.push("cdc-tooltip--top"), t.className && (Array.isArray(t.className) ? e = e.concat(t.className) : e.push(t.className)), this.element = CDC.Common.make("div", e.join(" "), {
                id: t.id,
                "aria-hidden": !0,
                tabindex: -1
            }, '\n\t\t\t<div class="cdc-tooltip__tail"></div>\n\t\t\t<div class="cdc-tooltip__content">\n\t\t\t<div class="cdc-tooltip__header">\n\t\t\t\t<div class="cdc-tooltip__title"></div>\n\t\t\t\t<div class="cdc-tooltip__close">\n\t\t\t\t\t<button type="button"class="btn py-1 cdc-tooltip-close__button cdc-tooltip__title" aria-label="Close"><span class="cdc-fa-regular cdc-fa-circle-xmark"></span></button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t<div class="cdc-tooltip__body"></div>\n\t\t\t\t<div class="cdc-tooltip__footer"></div>\n\t\t\t</div>\n\t\t'), document.body.append(this.element), this.nodes = {
                title: this.element.querySelector(".cdc-tooltip__title"),
                body: this.element.querySelector(".cdc-tooltip__body"),
                footer: this.element.querySelector(".cdc-tooltip__footer"),
                tail: this.element.querySelector(".cdc-tooltip__tail"),
                close: this.element.querySelector(".cdc-tooltip-close__button")
            }, this.nodes.close.addEventListener("click", function(e) {
                e.preventDefault(), n.close()
            }), t.title ? this.nodes.title.innerHTML = CDC.Common.cleanHTML(t.title) : this.nodes.title.remove(), this.nodes.body.innerHTML = CDC.Common.cleanHTML(String(t.message || "").trim()), t.footer ? this.nodes.footer.innerHTML = CDC.Common.cleanHTML(t.footer) : this.nodes.footer.remove(), this.updatePlacement(), window.addEventListener("resize", function() {
                return n.updatePlacement()
            }), this.element.setAttribute("hidden", !0), this.config.open && this.open(), this.config.click && this.targetElement.addEventListener("click", function(e) {
                e.preventDefault();
                e = !(!n.isOpen || n.holdOpen) || !n.isOpen;
                n.toggle(e, !0)
            }), this.config.hover && (this.targetElement.addEventListener("mouseenter", function() {
                n.heldOpen || n.open()
            }), this.targetElement.addEventListener("mouseleave", function() {
                n.heldOpen || n.close()
            })), document.addEventListener("click", function(e) {
                n.isOpen && !n.inTooltip(e.target) && n.close()
            }), document.addEventListener("keydown", function(e) {
                "Tab" === e.key && n.heldOpen && n.focusMove(e), "Escape" === e.key && n.heldOpen && (n.close(), n.focusMove(e))
            }), document.addEventListener("focusin", function(e) {
                n.isOpen && !n.inTooltip(e.target) && n.close()
            })
        }
        return _createClass(a, [{
            key: "focusTrap",
            value: function() {
                this.isOpen && this.focusable.length && (this.focusable[0].focus(), this.targetElement.scrollIntoView())
            }
        }, {
            key: "focusMove",
            value: function(e) {
                var t = e.shiftKey ? -1 : 1,
                    n = this.focusable.indexOf(e.target),
                    t = n + t; - 1 < n && this.focusable[t] ? (this.focusable[t].focus(), e.preventDefault()) : (this.close(), this.targetElement.focus())
            }
        }, {
            key: "focusExit",
            value: function() {
                this.close(), this.targetElement.focus()
            }
        }, {
            key: "inTooltip",
            value: function(e) {
                return this.element.contains(e) || this.targetElement.contains(e)
            }
        }, {
            key: "heldOpen",
            get: function() {
                return this.isOpen && this.holdOpen
            }
        }, {
            key: "focusable",
            get: function() {
                return Array.from(this.element.querySelectorAll("input,select,a[href],textarea,button,[tabindex]"))
            }
        }, {
            key: "updatePlacement",
            value: function() {
                var e = document.body.getBoundingClientRect(),
                    t = this.targetElement.getBoundingClientRect(),
                    n = t.top - e.top + this.targetElement.offsetHeight,
                    t = t.left - e.left,
                    e = this.targetElement.clientWidth,
                    a = this.targetElement.clientHeight,
                    o = this.element.clientWidth,
                    i = this.element.clientHeight,
                    r = n,
                    s = t,
                    n = (this.config.top && (r = n - i - a + 10), "left" === this.config.align && (s = t + e - o), "center" === this.config.align && (s = t + e - o / 2), s = Math.min(s, Math.max(16, window.innerWidth - o - 16)), 10);
                (s = Math.max(s, 16)) < t && (n = Math.min(t - s, o - 25)), this.element.style.top = "".concat(r, "px"), this.element.style.left = "".concat(s, "px"), this.nodes.tail.style.left = "".concat(n, "px")
            }
        }, {
            key: "toggle",
            value: function(e, t) {
                var n = this;
                e = void 0 === e ? !this.isOpen : !!e, this.element.classList.toggle("show", e), this.element.setAttribute("aria-hidden", !e), this.isOpen = e, this.isOpen ? (this.element.removeAttribute("hidden"), this.updatePlacement(), t && (this.holdOpen = !0, this.focusTrap())) : (this.holdOpen = !1, setTimeout(function() {
                    return !n.isOpen && n.element.setAttribute("hidden", !0)
                }, 500))
            }
        }, {
            key: "show",
            value: function(e) {
                this.toggle(!0, e)
            }
        }, {
            key: "open",
            value: function(e) {
                this.toggle(!0, e)
            }
        }, {
            key: "hide",
            value: function() {
                this.toggle(!1)
            }
        }, {
            key: "close",
            value: function() {
                this.toggle(!1)
            }
        }], [{
            key: "create",
            value: function(e, t) {
                return new a(e, t)
            }
        }]), a
    }()),
    CDCForms = (_defineProperty(CDCTooltip, "defaultConfig", {
        open: !1,
        className: [],
        id: null,
        width: 0,
        title: "",
        message: "",
        footer: "",
        align: "center",
        hover: !0,
        click: !0,
        top: !0
    }), function() {
        function t(e) {
            _classCallCheck(this, t), this.form = document.querySelector(e), this.form && this.initialize()
        }
        return _createClass(t, [{
            key: "initialize",
            value: function() {
                this.setupSelectMenus()
            }
        }, {
            key: "setupSelectMenus",
            value: function() {
                var t = this;
                this.form.querySelectorAll("select.form-control").forEach(function(e) {
                    e.hasAttribute("multiple") || (e.setAttribute("data-status", "closed"), t.addEventListeners(e))
                })
            }
        }, {
            key: "addEventListeners",
            value: function(t) {
                t.addEventListener("focus", function() {
                    t.setAttribute("data-status", "open")
                }), t.addEventListener("blur", function() {
                    t.setAttribute("data-status", "closed")
                }), document.addEventListener("mousedown", function(e) {
                    t.contains(e.target) || "open" !== t.getAttribute("data-status") || t.setAttribute("data-status", "closed")
                })
            }
        }]), t
    }()),
    CDCFeatures = (document.addEventListener("DOMContentLoaded", function() {
        new CDCForms(".cdcemailform")
    }), function() {
        function e() {
            _classCallCheck(this, e), _defineProperty(this, "accordions", []), _defineProperty(this, "popovers", []), this.init()
        }
        return _createClass(e, [{
            key: "init",
            value: function() {
                this.loadPopovers(), this.handleReferences(), this.handleClipboardBtns(), this.audioLengthUpdate(), this.handleSocialSharing(), this.handleOTPPosition(), this.handleOTPShowMore(), this.loadAccordions(), this.loadBannerAlert(), this.fixSSIerrors(), this.loadQRCode(), this.handleExternalLinksModal(), this.handleViewLargerLinksModal(), this.toggleContentFinder(), this.toggleTextDescriptionFinder(), this.curatedLinkShowDownloadColumn(), this.curatedLinkHomepageTabIndexing(), this.wideBlockLayoutHandler(), this.ytPrintLinkHandler(), this.handleEmailForms(), this.handleSensitiveImages(), this.printLink(), this.tableScrollHandler(), this.imageC2RHandler()
            }
        }, {
            key: "loadAccordions",
            value: function() {
                var o = CDC_Lang.__("Expand All"),
                    i = CDC_Lang.__("Collapse All");
                $("main .accordions").each(function() {
                    var e = $(this).parent().find("h2").first();
                    e.hasClass("accordion-header") || ($(this).prepend('<div class="accordion-toggle"><a href="#" class="accordion__toggle-all expand-all">' + o + "</a></div>"), e.wrap('<div class="accordion-title"></div>'))
                }), $("main .accordions a.accordion__toggle-all").each(function(e) {
                    var a = $(this),
                        t = a.closest(".accordions");

                    function n() {
                        var e = 0 < t.find(".accordion-collapse.show").length;
                        a.text(e ? i : o), a.toggleClass("collapse-all", e).toggleClass("expand-all", !e)
                    }
                    a.addClass("panel-".concat(e)).on("click", function() {
                        var e = a.closest(".dfe-section"),
                            t = e.find(".accordion-header button"),
                            e = e.find(".accordion-collapse"),
                            n = o === a.text();
                        return t.toggleClass("collapsed", !n).attr("aria-expanded", n), e.toggleClass("collapse", !n).toggleClass("show", n), a.text(n ? i : o), a.toggleClass("collapse-all", n).toggleClass("expand-all", !n), !1
                    }), t.find(".accordion").each(function() {
                        $(this).on("show.bs.collapse", function() {
                            var e = $(this).find(".accordion-collapse");
                            e.addClass("show"), e.attr("aria-expanded", !0), n()
                        }).on("hide.bs.collapse", function() {
                            var e = $(this).find(".accordion-collapse");
                            e.removeClass("show"), e.attr("aria-expanded", !1), n()
                        })
                    })
                })
            }
        }, {
            key: "loadPopovers",
            value: function() {
                var e = document.querySelectorAll('[data-bs-toggle="popover"]');
                null != e && e.length && (this.popovers = e.map(function(e) {
                    return new bootstrap.Popover(e)
                }))
            }
        }, {
            key: "audioLengthUpdate",
            value: function() {
                var r = document.getElementsByTagName("audio");
                if (HTMLCollection.prototype.isPrototypeOf(r))
                    for (var e = 0; e < r.length; e++) ! function(o) {
                        var i = new Audio;
                        i.preload = "metadata", i.src = r[o].getElementsByTagName("source")[0].getAttribute("src"), i.addEventListener("loadedmetadata", function() {
                            var e = i.duration,
                                t = Math.floor(e / 3600),
                                n = Math.floor(e % 3600 / 60),
                                e = Math.floor(e % 60),
                                a = [0 < t ? t + " hours" : 0, n + " minutes ", e + " seconds"].filter(function(e) {
                                    return e
                                }).join(" ");
                            document.getElementById(r[o].id + "__length").innerText = a, 0 < e + n + t && (document.getElementById(r[o].id + "_length_container").style.display = "inline")
                        })
                    }(e)
            }
        }, {
            key: "handleReferences",
            value: function() {
                $("main .cdc-references-cite a, main .cdc-footnotes-cite a").on("click", function(e) {
                    var t, n = null == (t = e.target) ? void 0 : t.getAttribute("href");
                    n && (e.preventDefault(), $("#content-sources").hasClass("show") ? null != (t = document.querySelector(n)) && t.scrollIntoView() : ($("#content-sources").collapse("show"), setTimeout(function() {
                        var e;
                        null != (e = document.querySelector(n)) && e.scrollIntoView()
                    }, 400)))
                })
            }
        }, {
            key: "handleSensitiveImages",
            value: function() {
                var e = this;
                this.updateSensitiveImages(), document.addEventListener("cdc/modules/slider", function() {
                    return e.updateSensitiveImages()
                })
            }
        }, {
            key: "updateSensitiveImages",
            value: function() {
                $(".image-container.sensitive, .dfe-curated-link__image.sensitive").each(function(e, t) {
                    var n, a, o, i;
                    null != t && t.sensitiveImage || (t.sensitiveImage = !0, (a = t.querySelector(".sensitive-image-overlay")) && a.remove(), (n = document.createElement("div")).classList.add("sensitive-image-overlay"), (a = document.createElement("div")).classList.add("sensitive-image-overlay__message-container"), (o = document.createElement("div")).classList.add("sensitive-image-overlay__message"), o.innerHTML = CDC_Lang.__("This photo contains content that may be sensitive to some people"), (i = document.createElement("button")).innerText = CDC_Lang.__("View photo"), i.classList.add("btn"), i.classList.add("btn-blue"), i.addEventListener("click", function(e) {
                        e.preventDefault(), n.parentElement.classList.remove("sensitive"), n.parentElement.removeChild(n)
                    }), a.appendChild(o), a.appendChild(i), n.append(a), t.append(n))
                })
            }
        }, {
            key: "handleEmailForms",
            value: function() {
                $(".dfe-block--email_signup_form form").each(function(e, t) {
                    t.setAttribute("action", "https://tools.cdc.gov/campaignproxyservice/subscriptions.aspx")
                })
            }
        }, {
            key: "handleClipboardBtns",
            value: function() {
                $("[data-clipboard-btn]").each(function(e, a) {
                    a.addEventListener("click", function(e) {
                        e.preventDefault();
                        var e = a.getAttribute("data-clipboard-btn"),
                            t = a.getAttribute("data-textChange");
                        if (e) {
                            t = t || "Copied", e = $(e);
                            if (e.length && e.val()) {
                                var n = $("<input>");
                                $("body:first").append(n), n.val(e.val()).select();
                                try {
                                    document.execCommand("copy"), a.innerText = t
                                } catch (e) {
                                    console.error("Failed to copy to clipboard:", e)
                                }
                                n.remove()
                            }
                        }
                    })
                })
            }
        }, {
            key: "handleSocialSharing",
            value: function() {
                var e = !window.location.hostname.match(/local|vvv|dev|test|stage|prototype/),
                    t = [$("main h1:first").text(), String(document.title).replace(/\s\|.*/, "")].shift(),
                    n = [$('head link[rel="canonical"]').attr("href"), document.location.href].shift(),
                    n = e || CDC.Common.getParamSwitch("cdcdebug") ? n : "https://www.cdc.gov",
                    e = encodeURIComponent(t),
                    t = encodeURIComponent(n),
                    n = "https://www.facebook.com/sharer/sharer.php?u=" + t;
                $(".page-share-facebook").attr("href", n), n = "http://twitter.com/share?url=" + t + "&text=" + e, $(".page-share-twitter").attr("href", n), n = "https://www.linkedin.com/shareArticle?url=" + t + "&title=" + e, $(".page-share-linkedin").attr("href", n)
            }
        }, {
            key: "handleOTPPosition",
            value: function() {
                function e() {
                    var e, t, n;
                    window.innerWidth < 992 || (t = document.querySelector("#content h2")) && 0 !== t.length && (e = t.offsetHeight, t = parseInt(window.getComputedStyle(t).marginTop), n = document.querySelector(".page-right-rail__static .on-this-page")) && 0 !== n.length && (n.style.marginTop = "".concat(e + t - 18, "px"))
                }
                e(), document.addEventListener("resize", CDC.Common.throttle(e, 100))
            }
        }, {
            key: "handleOTPShowMore",
            value: function() {
                var e, n, a = document.querySelector(".page-right-rail .on-this-page"),
                    t = null == a ? void 0 : a.querySelector(".card-body");
                a && (n = 992 < window.innerWidth ? 10 : 5, a.ul = a.querySelector("ul"), a.links = null == (e = a.ul) ? void 0 : e.querySelectorAll("li"), !a.ul || a.links.length <= n || (a.isOpen = !1, a.button = CDC.make("a", "more-link", {
                    href: "#"
                }, CDC_Lang.__("Show More")), t.append(a.button), a.toggle = function(e) {
                    a.isOpen = void 0 !== e ? !!e : !a.isOpen, a.classList.toggle("open", a.isOpen), a.button.innerHTML = a.isOpen ? CDC_Lang.__("Show Less") : CDC_Lang.__("Show More"), a.links.forEach(function(e, t) {
                        n <= t && e.classList.toggle("d-none", !a.isOpen)
                    })
                }, a.button.addEventListener("click", function(e) {
                    e.preventDefault(), a.toggle()
                }), a.toggle(a.isOpen)))
            }
        }, {
            key: "loadBannerAlert",
            value: function() {
                var e = document.querySelector("[data-cdc-site-alert]");
                e && (window.location.hostname.includes("prototype.cdc") ? e.innerHTML = '\n\t\t\t\t\t<div class="cdc-site-alert">\n\t\t\t\t\t\t<div class="alert alert-error alert-icon" role="status" aria-live="polite">\n\t\t\t\t\t\t\t<p><strong>DISCLAIMER:</strong><br/> This page is not for official use and does not represent cleared content. This page is published temporarily and is for user testing purposes only.</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t' : "snapshot2024.cdc.gov" === window.location.hostname && (e.innerHTML = '\n\t\t\t\t\t<div class="alert alert-danger my-2 p-2 text-center" role="status" aria-live="polite" style="border:0;color:#000;">\n\t\t\t\t\t\t<div style="max-width:800px; margin: auto">\n\t\t\t\t\t\t\tThis is a complete historical copy of <a href="https://www.cdc.gov">www.cdc.gov</a> as it appeared on May 15 before relaunch. This site will be available through November 2024.\n\t\t\t\t\t\t\tFor the new CDC.gov, visit <b><a href="https://www.cdc.gov">www.cdc.gov</a></b>.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t'))
            }
        }, {
            key: "fixSSIerrors",
            value: function() {
                try {
                    document.querySelectorAll("B").forEach(function(e) {
                        var t;
                        "Error processing SSI file" === e.innerHTML && ("BR" === (null == (t = e.nextSibling) ? void 0 : t.nodeName) && e.nextSibling.remove(), e.remove())
                    })
                } catch (e) {
                    console.debug("ssi fix stop:", e)
                }
            }
        }, {
            key: "loadQRCode",
            value: function() {
                try {
                    CDC.Common.loadJS(CDC.tpPath + "/TemplatePackage/contrib/libs/qrcodejs/latest/qrcode.min.js", function() {
                        var e = CDC.cleanUrl(location.href).replace(/[\?#].*$/, ""),
                            n = $("#cdc-print-qrcode:first");
                        n.length || (n = $('<div id="cdc-print-qrcode" class="d-none d-print-block ms-auto" />').hide(), $("header.cdc-header").append(n)), window.QRCode ? window.QRCode.toDataURL(e + "?s_cid=qr2022", {
                            errorCorrectionLevel: "H",
                            type: "image/jpeg",
                            quality: .3,
                            margin: 0,
                            scale: 2,
                            color: {
                                dark: "#000000",
                                light: "#ffffff"
                            }
                        }, function(e, t) {
                            !e && t && n.safeappend($("<img />").attr("src", t)).show()
                        }) : console.log("returned")
                    })
                } catch (e) {
                    console.log("QR Code not loaded", e)
                }
            }
        }, {
            key: "handleExternalLinksModal",
            value: function() {
                var e = document.querySelectorAll(".tp-link-policy");
                e.length && e.forEach(function(e) {
                    e.target = "_blank"
                })
            }
        }, {
            key: "getImageDimensions",
            value: function(a) {
                return new Promise(function(e, t) {
                    var n = new Image;
                    n.onload = function() {
                        e({
                            width: n.naturalWidth,
                            height: n.naturalHeight
                        })
                    }, n.onerror = t, n.src = a
                })
            }
        }, {
            key: "handleViewLargerLinksModal",
            value: function() {
                var t = this,
                    e = document.querySelectorAll("span.image-modal a");
                e.length && e.forEach(function(i) {
                    var e = i.closest(".dfe-image"),
                        r = null == e ? void 0 : e.querySelector("img"),
                        s = null == e ? void 0 : e.querySelector("figcaption");
                    r && (e = r.src, t.getImageDimensions(e).then(function(e) {
                        var t = CDC.make("div"),
                            n = r.cloneNode(),
                            a = document.querySelector("#content"),
                            o = "800px";
                        a && "number" == typeof(a = a.getBoundingClientRect().width) && 0 < a && (o = a + "px"), e.width < 660 ? n.style.minWidth = "300px" : (n.style.minWidth = "660px", n.style.maxWidth = o), t.append(n), s && t.append(s.cloneNode(!0)), i.addEventListener("click", function(e) {
                            e.preventDefault(), new CDCModal({
                                className: ["modal-view-larger"],
                                size: "modal-lg",
                                title: "",
                                message: "".concat(t.innerHTML),
                                buttons: []
                            }).show()
                        })
                    }).catch(function(e) {
                        console.error("Error loading image:", e)
                    }))
                })
            }
        }, {
            key: "toggleContent",
            value: function(e, t) {
                var e = document.getElementById(e),
                    n = t.innerText,
                    a = null != (a = null == (a = e.dataset) ? void 0 : a.textOpen) ? a : CDC_Lang.__("Show More"),
                    o = null != (o = null == (o = e.dataset) ? void 0 : o.textClose) ? o : CDC_Lang.__("Show Less"),
                    i = $(t);
                i.hasClass("closed") || a === n ? (e.style.whiteSpace = "normal", e.innerHTML = e.dataset.originalContent, t.innerHTML = '<span class="cdc-icon cdc-fa-light cdc-fa-angle-up"></span>' + o, i.removeClass("closed"), i.addClass("opened")) : !i.hasClass("opened") && o !== n || (e.innerHTML = e.dataset.truncatedContent + "...", t.innerHTML = '<span class="cdc-icon cdc-fa-light cdc-fa-angle-down"></span>' + a, i.removeClass("opened"), i.addClass("closed"))
            }
        }, {
            key: "toggleContentFinder",
            value: function() {
                var o = this;
                document.querySelectorAll("[data-toggle-content]").forEach(function(e) {
                    var t = e.getAttribute("data-toggle-content"),
                        n = document.getElementById(t),
                        a = parseInt(e.getAttribute("data-content-chars") || 140);
                    n.dataset.originalContent = null == n ? void 0 : n.innerHTML, n.dataset.truncatedContent = null == n ? void 0 : n.innerHTML.substring(0, a).split(/\s(?=\w)/).join(" ").replace(/<[^>]+$/, ""), n.innerHTML = n.dataset.truncatedContent + "...", e.style.display = "block", e.addEventListener("click", function() {
                        return o.toggleContent(t, e)
                    })
                })
            }
        }, {
            key: "toggleTextDescription",
            value: function(e, t) {
                t = document.getElementById(t);
                t.classList.toggle("hide"), t.classList.contains("hide") ? e.innerHTML = '<span class="cdc-icon cdc-fa-light cdc-fa-angle-down"></span>' + CDC_Lang.__("Show Text Description") : e.innerHTML = '<span class="cdc-icon cdc-fa-light cdc-fa-angle-up"></span>' + CDC_Lang.__("Hide Text Description")
            }
        }, {
            key: "toggleTextDescriptionFinder",
            value: function() {
                var n = this;
                document.querySelectorAll("[data-toggle-text]").forEach(function(e) {
                    var t = e.getAttribute("data-toggle-text");
                    e.addEventListener("click", function() {
                        return n.toggleTextDescription(e, t)
                    })
                })
            }
        }, {
            key: "curatedLinkShowDownloadColumn",
            value: function() {
                document.querySelectorAll("div.dfe-section").forEach(function(e) {
                    var t, e = e.querySelectorAll(".dfe-curated-link__download"),
                        n = !1,
                        a = _createForOfIteratorHelper(e);
                    try {
                        for (a.s(); !(t = a.n()).done;)
                            if (0 < t.value.innerHTML.trim().length) {
                                n = !0;
                                break
                            }
                    } catch (e) {
                        a.e(e)
                    } finally {
                        a.f()
                    }
                    n && null != e && e.forEach(function(e) {
                        e.classList.add("has-content")
                    })
                })
            }
        }, {
            key: "curatedLinkHomepageTabIndexing",
            value: function() {
                var e = document.querySelector("#content .homepage");
                "cdc_homepage" !== CDC.Page.dfeTemplate && "cdc_outbreak_homepage" !== CDC.Page.dfeTemplate && !e || null == (e = e.querySelectorAll(".dfe-curated-link")) || e.forEach(function(e) {
                    var t;
                    e.classList.contains("dfe-curated-link--list") || (e.setAttribute("tabindex", 0), null != (t = e.querySelectorAll("a, button")) && t.forEach(function(e) {
                        e.closest(".dfe-curated-link--list") || e.closest(".download-container") || e.setAttribute("tabindex", -1)
                    }), e.addEventListener("keyup", function(e) {
                        "Enter" === e.key && e.target.querySelector("a").click()
                    }))
                })
            }
        }, {
            key: "handleHideOTP",
            value: function() {
                window.innerWidth < 992 || setTimeout(function() {
                    var t, n, e = document.querySelector(".on-this-page"),
                        a = document.querySelectorAll(".cdc-dfe-body__center .dfe-block--width-wide, .cdc-dfe-body__center .dfe-block--width-full_width");
                    e && a && a.length && (t = window.scrollY + e.getBoundingClientRect().top + e.scrollHeight, n = !1, a.forEach(function(e) {
                        window.scrollY + e.getBoundingClientRect().top < t && (n = !0)
                    }), n ? (e.setAttribute("tabindex", "-1"), e.style.opacity = "0", e.style.pointerEvents = "none") : (e.removeAttribute("tabindex"), e.style.opacity = "1", e.style.pointerEvents = "auto"))
                }, 0)
            }
        }, {
            key: "wideBlockLayoutHandler",
            value: function() {
                var e, r, n, t, a = this;
                window.innerWidth < 992 || (e = document.querySelector(".cdc-page-content")) && (r = function(e) {
                    var t = new ResizeObserver(function() {
                        return n(e)
                    });
                    e && t.observe(e.firstChild)
                }, n = function(e) {
                    var t = e.firstChild.offsetHeight,
                        n = parseInt(window.getComputedStyle(e).getPropertyValue("margin-top")),
                        a = parseInt(window.getComputedStyle(e).getPropertyValue("margin-bottom"));
                    e.style.height = "".concat(t + n + a, "px")
                }, t = function() {
                    window.innerWidth < 992 || setTimeout(function() {
                        var e = document.querySelector(".page-right-rail__dynamic .related-pages"),
                            t = document.querySelectorAll(".dfe-block--width-wide, .dfe-block--width-full_width");
                        e && t.length && e.classList.add("hide")
                    }, 0)
                }, ["standard", "wide", "full_width"].forEach(function(e) {
                    "wide" !== e && "full_width" !== e || (e = document.body.querySelectorAll(".dfe-block--width-".concat(e))) && e.length && e.forEach(function(e) {
                        var t, n, a, o, i;
                        t = e, n = document.querySelectorAll(".dfe-section"), a = t.closest(".dfe-section"), 0 < n.length && n[n.length - 1] === a && a.lastElementChild === t && (a.classList.add("last-child-is-wide-block"), t.closest(".cdc-page-content").classList.add("last-section-has-last-child-wide-block")), o = e, (i = new MutationObserver(function() {
                            document.contains(o) && o.classList.contains("dfe-block--width-full_width") && (r(o), i.disconnect())
                        })).observe(document.body, {
                            childList: !0,
                            subtree: !0
                        })
                    })
                }), window.innerWidth < 992 || new ResizeObserver(function() {
                    a.handleHideOTP(), t()
                }).observe(e))
            }
        }, {
            key: "ytPrintLinkHandler",
            value: function() {
                var e = document.querySelectorAll(".cdc-youtube-embed");
                e && e.length && e.forEach(function(o) {
                    var e;
                    o.querySelector("iframe") && (e = o.dataset.ytId, fetch("https://noembed.com/embed?url=https://www.youtube.com/watch?v=".concat(e)).then(function(e) {
                        if ("OK" === e.status || 200 === e.status) return e.json()
                    }).then(function(e) {
                        var t = e.title || null,
                            e = e.url || null,
                            n = document.createElement("p"),
                            a = document.createElement("a");
                        n.classList.add("cdc-youtube-embed--print"), a.href = e, a.innerText = t, n.appendChild(a), o.appendChild(n)
                    }))
                })
            }
        }, {
            key: "printLink",
            value: function() {
                var e, t, n;
                window.hasOwnProperty("s") && (e = "https://www.cdc.gov/wcms/s.gif?action=print&rs=" + (window.s.hasOwnProperty("account") ? s.account : "devcdc") + "&url=" + encodeURIComponent(window.location.href.split("#")[0].split("?")[0]) + "&pageName=" + encodeURIComponent(document.title) + "&_=" + (new Date).getTime().toString(), e = "body:first-of-type{background-image:url(".concat(e, ")}"), t = document.head || document.getElementsByTagName("head")[0], n = document.createElement("style")) && t && (n.setAttribute("type", "text/css"), n.setAttribute("media", "print"), n.styleSheet ? n.styleSheet.cssText = e : n.appendChild(document.createTextNode(e)), t.appendChild(n))
            }
        }, {
            key: "tableScrollHandler",
            value: function() {
                var e = document.querySelectorAll(".cdc-textblock table");
                null != e && e.forEach(function(e) {
                    var t = e.parentNode,
                        n = document.createElement("div");
                    n.style.overflowX = "auto", t.insertBefore(n, e), n.appendChild(e)
                })
            }
        }, {
            key: "imageC2RHandler",
            value: function() {
                var n = this;
                document.addEventListener("cdc-image-c2r", function(e) {
                    return n.imageC2RBadge(e.target, e.detail)
                }), document.addEventListener("cdc-cc-draw", function(e) {
                    var t;
                    null != e && null != (t = e.detail) && t.id && n.imageC2RReset(document.getElementById(null == e || null == (t = e.detail) ? void 0 : t.id)), "function" == typeof window.cdcc2paCheck && window.cdcc2paCheck()
                }), document.addEventListener("cdc/modules/slider", function() {
                    return "function" == typeof window.cdcc2paCheck && window.cdcc2paCheck()
                }), "function" == typeof window.cdcc2paCheck && window.cdcc2paCheck()
            }
        }, {
            key: "imageC2RBadge",
            value: function(e, t) {
                var n, a;
                e.c2rbadge || (n = String((null == t || null == (n = t.activeManifest) ? void 0 : n.claimGenerator) || ""), a = String((null == t || null == (a = t.activeManifest) || null == (a = a.signatureInfo) ? void 0 : a.issuer) || ""), (t = String((null == t || null == (t = t.activeManifest) || null == (t = t.signatureInfo) ? void 0 : t.time) || "")) && (a += (a ? "<br/>" : "") + (t = new Date(t).toLocaleDateString(void 0, {
                    year: "numeric",
                    month: "long",
                    day: "numeric"
                }))), t = '\n\t\t\t<p>\n\t\t\t\tInformation about how an image was edited or created.\n\t\t\t\t<a target="_blank" data-image="'.concat(CDC.Common.cleanAttr(e.src), '" href="https://www.cdc.gov/other/generative-ai.html">Learn more</a>\n\t\t\t</p>\n\t\t\t<div class="group">\n\t\t\t\t<span class="cdc-fa-sparkle"></span>\n\t\t\t\t<div>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tAI was used to create this image\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t').concat(n ? '\n\t\t\t\t<div class="group">\n\t\t\t\t\t<span class="cdc-fa-laptop"></span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tApp or device used:<br/>\n\t\t\t\t\t\t\t'.concat(n, "\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t") : "", "\n\t\t\t").concat(a ? '\n\t\t\t\t<div class="group">\n\t\t\t\t\t<span class="cdc-fa-badge-check"></span>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tContent Credentials issued by:<br/>\n\t\t\t\t\t\t\t'.concat(a, "\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t") : "", "\n\t\t"), n = CDC.make("div", "cdc-image-c2r"), a = CDC.make("button", "cdc-image-c2r__badge", {}, '<img class="cdc-image-c2r__icon" src="/TemplatePackage/contrib/libs/cdc/c2r/crlogo.svg" alt="" />'), e.after(n), n.append(e), n.append(a), e.c2rbadge = !0, CDCTooltip.create(a, {
                    title: '<img class="cdc-image-c2r__icon" src="/TemplatePackage/contrib/libs/cdc/c2r/crlogo.svg" alt="" /> Content Credentials',
                    message: t,
                    className: "cdc-image-c2r__tooltip",
                    top: !1,
                    hover: !1,
                    align: "left"
                }))
            }
        }, {
            key: "imageC2RReset",
            value: function(e) {
                !e instanceof HTMLElement || Array.from(e.getElementsByTagName("img")).forEach(function(e) {
                    var t, n;
                    e.hasOwnProperty("c2pa") && (t = e.parentElement, delete e.c2pa, delete e.c2rbadge, null != t) && null != (n = t.classList) && n.contains("cdc-image-c2r") && (null != (n = t.querySelector(".cdc-image-c2r__badge")) && n.remove(), t.before(e), t.remove())
                })
            }
        }]), e
    }()),
    CDC_Lang = function() {
        function a(e) {
            return _classCallCheck(this, a), a(e)
        }
        return _createClass(a, null, [{
            key: "translate",
            value: function(e) {
                var t = String(e).trim(),
                    n = CDC.Page.lang;
                return t = a.map[n] && a.map[n][e] ? a.map[n][e] : t
            }
        }, {
            key: "t",
            value: function(e) {
                return a.translate(e)
            }
        }, {
            key: "__",
            value: function(e) {
                return a.translate(e)
            }
        }, {
            key: "getLabel",
            value: function(e) {
                var t = null,
                    e = a.LANGS[e];
                return t = e ? e.label || e.name : t
            }
        }]), a
    }(),
    CDCMobileMenu = (_defineProperty(CDC_Lang, "LANGS", {
        en: {
            name: "English (US)",
            label: "English (US)"
        },
        haw: {
            name: "Hawaiian",
            label: "ʻŌlelo Hawaiʻi"
        },
        es: {
            name: "Spanish",
            label: "Español",
            mpt: "https://espanol.cdc.gov/enes"
        },
        zh: {
            name: "Chinese",
            label: "中文"
        },
        "zh-hans": {
            name: "Simplified Chinese",
            label: "简体中文"
        },
        "zh-hant": {
            name: "Traditional Chinese",
            label: "繁體中文"
        },
        vi: {
            name: "Vietnamese",
            label: "Tiếng Việt",
            mpt: "https://vietnamese.cdc.gov"
        },
        ko: {
            name: "Korean",
            label: "한국어"
        },
        tl: {
            name: "Tagalog"
        },
        ru: {
            name: "Russian",
            label: "Русский"
        },
        ar: {
            name: "Arabic",
            label: "العربية"
        },
        ht: {
            name: "Creole",
            label: "Kreyòl"
        },
        "es-pr": {
            name: "Spanish (Puerto Rico)",
            label: "Español (Puerto Rico)"
        },
        fr: {
            name: "French",
            label: "Français"
        },
        pl: {
            name: "Polish",
            label: "Polski"
        },
        pt: {
            name: "Portuguese",
            label: "Português",
            mpt: "https://portugues.cdc.gov"
        },
        "pt-br": {
            name: "Brazilian Portuguese",
            label: "Português (Brasil)"
        },
        it: {
            name: "Italian",
            label: "Italiano"
        },
        de: {
            name: "German",
            label: "Deutsch"
        },
        ja: {
            name: "Japanese",
            label: "日本語"
        },
        fa: {
            name: "Farsi",
            label: "فارسی"
        },
        ms: {
            name: "Malay",
            label: "Bahasa Melayu"
        },
        hi: {
            name: "Hindi",
            label: "हिन्दी"
        },
        th: {
            name: "Thai",
            label: "ภาษาไทย"
        },
        ase: {
            name: "American Sign Language (ASL)",
            label: "American Sign Language (ASL)"
        },
        am: {
            name: "Amharic",
            label: "ኣማርኛ"
        },
        my: {
            name: "Burmese",
            label: "ဗမာစကား"
        },
        prs: {
            name: "Dari",
            label: "درى"
        },
        ne: {
            name: "Nepali",
            label: "नेपाली"
        },
        ps: {
            name: "Pashto",
            label: "پښتو"
        },
        so: {
            name: "Somali",
            label: "af Soomaali"
        },
        sw: {
            name: "Swahili",
            label: "Kiswahili"
        },
        ti: {
            name: "Tigrinya",
            label: "ትግርኛ"
        },
        uk: {
            name: "Ukrainian",
            label: "Українська"
        },
        kar: {
            name: "Karen",
            label: "Karen"
        },
        rw: {
            name: "Kinyarwanda",
            label: "Ikinyarwanda"
        },
        kun: {
            name: "Kunama"
        },
        om: {
            name: "Oromo",
            label: "Afaan Oromo"
        },
        chk: {
            name: "Chuukese"
        },
        mh: {
            name: "Marshallese"
        },
        to: {
            name: "Tongan"
        },
        he: {
            name: "Hebrew",
            label: "עִבְרִית"
        },
        yi: {
            name: "Yiddish",
            label: "ײִדיש"
        },
        hmn: {
            name: "Hmong"
        },
        sr: {
            name: "Serbian",
            label: "српски језик"
        },
        ku: {
            name: "Kurdish",
            label: "کوردی"
        },
        urd: {
            name: "Urdu",
            label: "اُردُو"
        },
        dz: {
            name: "Dzongkha"
        },
        rn: {
            name: "Rundi"
        },
        ilo: {
            name: "Ilocano"
        },
        bs: {
            name: "Bosnian",
            label: "bosanski jezik"
        },
        ab: {
            name: "Abkhazian"
        },
        aa: {
            name: "Afar"
        },
        af: {
            name: "Afrikaans"
        },
        ak: {
            name: "Akan"
        },
        sq: {
            name: "Albanian"
        },
        an: {
            name: "Aragonese"
        },
        hy: {
            name: "Armenian"
        },
        as: {
            name: "Assemese"
        },
        av: {
            name: "Avaric"
        },
        ae: {
            name: "Avestan"
        },
        ay: {
            name: "Aymara"
        },
        az: {
            name: "Azerbaijani"
        },
        bm: {
            name: "Bambara"
        },
        ba: {
            name: "Bashkir"
        },
        eu: {
            name: "Basque"
        },
        be: {
            name: "Belarusian"
        },
        bn: {
            name: "Bengali"
        },
        bi: {
            name: "Bislama"
        },
        br: {
            name: "Breton"
        },
        bg: {
            name: "Bulgarian"
        },
        ca: {
            name: "Catalan"
        },
        ch: {
            name: "Chamorro"
        },
        ce: {
            name: "Cechen"
        },
        ny: {
            name: "Chichewa"
        },
        cu: {
            name: "Church Slavonic"
        },
        cv: {
            name: "Chuvash"
        },
        kw: {
            name: "Cornish"
        },
        co: {
            name: "Corsican"
        },
        cr: {
            name: "Cree"
        },
        hr: {
            name: "Croatian"
        },
        cs: {
            name: "Czech"
        },
        da: {
            name: "Danish"
        },
        dv: {
            name: "Divehi"
        },
        nl: {
            name: "Dutch"
        },
        eo: {
            name: "Esperanto"
        },
        et: {
            name: "Estonian"
        },
        ee: {
            name: "Ewe"
        },
        fo: {
            name: "Faroese"
        },
        fj: {
            name: "Fijian"
        },
        fi: {
            name: "Finnish"
        },
        fy: {
            name: "Western Frisian"
        },
        ff: {
            name: "Fulah"
        },
        gd: {
            name: "Gaelic"
        },
        gl: {
            name: "Galician"
        },
        lg: {
            name: "Luganda"
        },
        ka: {
            name: "Georgian"
        },
        el: {
            name: "Greek"
        },
        kl: {
            name: "Kalaallisut"
        },
        gn: {
            name: "Guarani"
        },
        gu: {
            name: "Gujarati"
        },
        ha: {
            name: "Hausa"
        },
        hz: {
            name: "Herero"
        },
        ho: {
            name: "Hiri Motu"
        },
        hu: {
            name: "Hungarian"
        },
        is: {
            name: "Icelandic"
        },
        io: {
            name: "Ido"
        },
        ig: {
            name: "Igbo"
        },
        id: {
            name: "Indonesian"
        },
        ia: {
            name: "Interlingua"
        },
        ie: {
            name: "Interlingue"
        },
        iu: {
            name: "Inukitut"
        },
        ik: {
            name: "Inupiaq"
        },
        ga: {
            name: "Irish"
        },
        jv: {
            name: "Javanese"
        },
        kn: {
            name: "Kannada"
        },
        quc: {
            name: "K'iche'"
        },
        kr: {
            name: "Kanuri"
        },
        ks: {
            name: "Kashmiri"
        },
        kk: {
            name: "Kazakh"
        },
        km: {
            name: "Central Khmer"
        },
        ki: {
            name: "Kikuyu"
        },
        ky: {
            name: "Kirghiz"
        },
        kv: {
            name: "Komi"
        },
        kg: {
            name: "Kongo"
        },
        kj: {
            name: "Kuanyama"
        },
        lo: {
            name: "Lao"
        },
        la: {
            name: "Latin"
        },
        lv: {
            name: "Latvian"
        },
        li: {
            name: "Limburgan"
        },
        ln: {
            name: "Lingala"
        },
        lt: {
            name: "Lithuanian"
        },
        lu: {
            name: "Luba Katanga"
        },
        lb: {
            name: "Luxembourgish"
        },
        mk: {
            name: "Macedonian"
        },
        mg: {
            name: "Malagasy"
        },
        ml: {
            name: "Malayalam"
        },
        mt: {
            name: "Maltese"
        },
        mam: {
            name: "Mam"
        },
        gv: {
            name: "Manx"
        },
        mi: {
            name: "Maori"
        },
        mr: {
            name: "Marathi"
        },
        mn: {
            name: "Mongolian"
        },
        nah: {
            name: "Nahuatl"
        },
        na: {
            name: "Nauru"
        },
        nv: {
            name: "Navajo"
        },
        nd: {
            name: "North Ndebele"
        },
        nr: {
            name: "South Nedebele"
        },
        ng: {
            name: "Ndonga"
        },
        no: {
            name: "Norwegian"
        },
        nb: {
            name: "Norwegian Bokmal"
        },
        nn: {
            name: "Norwegian Nynorsk"
        },
        ii: {
            name: "Sichuan Yi"
        },
        oc: {
            name: "Occitian"
        },
        oj: {
            name: "Ojibwa"
        },
        or: {
            name: "Oriya"
        },
        os: {
            name: "Ossetian"
        },
        pi: {
            name: "Pali"
        },
        pa: {
            name: "Punjabi"
        },
        qu: {
            name: "Quechua"
        },
        kjb: {
            name: "Q'anjob'al"
        },
        ro: {
            name: "Romanian"
        },
        rm: {
            name: "Romansh"
        },
        se: {
            name: "Northern Sami"
        },
        sm: {
            name: "Samoan"
        },
        sg: {
            name: "Sango"
        },
        sa: {
            name: "Sanskrit"
        },
        sc: {
            name: "Sardinian"
        },
        sn: {
            name: "Shona"
        },
        sd: {
            name: "Sindhi"
        },
        si: {
            name: "Sinhala"
        },
        sk: {
            name: "Slovak"
        },
        sl: {
            name: "Slovenian"
        },
        st: {
            name: "Southern Southo"
        },
        su: {
            name: "Sundanese"
        },
        ss: {
            name: "Swati"
        },
        sv: {
            name: "Swedish"
        },
        ty: {
            name: "Tahitian"
        },
        tg: {
            name: "Tajik"
        },
        ta: {
            name: "Tamil"
        },
        tt: {
            name: "Tatar"
        },
        te: {
            name: "Telugu"
        },
        bo: {
            name: "Tibetan"
        },
        ts: {
            name: "Tsonga"
        },
        tn: {
            name: "Tswana"
        },
        tr: {
            name: "Turkish"
        },
        tk: {
            name: "Turkmen"
        },
        tw: {
            name: "Twi"
        },
        ug: {
            name: "Uighur"
        },
        uz: {
            name: "Uzbek"
        },
        ve: {
            name: "Venda"
        },
        vo: {
            name: "Volapuk"
        },
        wa: {
            name: "Walloon"
        },
        cy: {
            name: "Welsh"
        },
        wo: {
            name: "Wolof"
        },
        xh: {
            name: "Xhosa"
        },
        yo: {
            name: "Yoruba"
        },
        za: {
            name: "Zhuang"
        },
        zu: {
            name: "Zulu"
        }
    }), _defineProperty(CDC_Lang, "map", {
        es: {
            Menu: "Menú",
            Close: "Cerrar",
            "All pages": "Todas las páginas",
            "Back to Top": "Inicio de la página",
            "Collapse All": "Cerrar todo",
            "Expand All": "Expandir todo",
            "Find Information": "Buscar información",
            "For Everyone": "Para todos",
            "Health Care Providers": "Proveedores de atención médica",
            "Hide Text Description": "Esconder descripción del texto",
            Languages: "Idiomas",
            "More Information": "Más información",
            of: "de",
            page: "página",
            Page: "Página",
            pages: "páginas",
            "Public Health": "Salud pública",
            "Related Pages": "Páginas Relacionadas",
            "Show Less": "Mostrar menos",
            "Show More": "Mostrar más",
            "Show Text Description": "Mostrar descripción del texto",
            "Site Index": "Índice del sitio",
            "Skip directly to On This Page": "Ir a En Esta Página",
            "Table of Contents": "Índice",
            "This photo contains content that may be sensitive to some people": "Esta foto tiene contenido que podría ser delicado para algunas personas",
            "View All": "Ver todo",
            "View photo": "Ver foto"
        }
    }), function() {
        function o() {
            var e, t, n, a = this;
            _classCallCheck(this, o), _defineProperty(this, "elements", {
                mobileMenu: null,
                mobileMenus: [],
                backdrop: null
            }), _defineProperty(this, "eventsAttached", !1), _defineProperty(this, "mobileMenu", null), _defineProperty(this, "mobileCurrentAccordion", null), this.isOpen = !1, this.elements = {
                mobileMenu: document.querySelector(".cdc-mobile-menu"),
                mobileSearch: document.querySelector(".cdc-mobile-menu-search"),
                mobileButtons: document.querySelector(".cdc-header-mobile__buttons"),
                mobileSearchToggles: document.querySelectorAll(".cdc-header-mobile__buttons a.search-link"),
                mobileMenuToggles: document.querySelectorAll(".cdc-header-mobile__title .dropdown-toggle"),
                mobileMenus: document.querySelectorAll(o.SELECTOR),
                navbar: document.querySelector(".cdc-mobile-navbar__links"),
                pagingButton: document.querySelector(".cdc-mobile-navbar__paging"),
                mobileAccordion: document.querySelectorAll(".cdc-mobile-audience .accordion-button")
            }, this.elements.mobileMenu && (this.elements.mobileMenu.search = null == (e = this.elements.mobileSearch) ? void 0 : e.querySelector("[data-search-input]"), this.hidePagingButton(), this.elements.mobileMenu && (this.mobileMenu = new bootstrap.Dropdown(this.elements.mobileMenu, {
                display: "static",
                autoClose: !0
            }), this.elements.mobileMenu.addEventListener("shown.bs.dropdown", function() {
                a.isOpen = !0
            }), this.elements.mobileMenu.addEventListener("hidden.bs.dropdown", function() {
                a.isOpen = !1
            }), this.elements.mobileSearchToggles.forEach(function(e) {
                e.addEventListener("click", function(e) {
                    a.elements.mobileButtons.classList.contains("search-active") ? (a.elements.mobileButtons.classList.remove("search-active"), a.elements.mobileMenu.search.setAttribute("tabindex", -1)) : (a.elements.mobileButtons.classList.add("search-active"), a.elements.mobileMenu.search.focus(), a.elements.mobileMenu.search.setAttribute("tabindex", 0))
                })
            }), this.elements.mobileMenuToggles.forEach(function(t) {
                t.addEventListener("click", function(e) {
                    e.preventDefault(), document.body.classList.toggle("mobile-menu-open"), t.classList.contains("show") ? setTimeout(function() {
                        t.innerHTML = "".concat(CDC_Lang.__("Close"), ' <i class="cdc-icon-close"></i>')
                    }, 50) : setTimeout(function() {
                        t.innerHTML = "".concat(CDC_Lang.__("Menu"), ' <i class="cdc-fa-angle-down"></i>')
                    }, 50), a.isOpen && null != (e = a.elements.mobileMenu.querySelector('button[aria-expanded="true"]')) && e.focus()
                })
            }), CDC.Page.audience && (e = document.getElementById("mobilemenu-".concat(CDC.Page.audience))) && (this.mobileCurrentAccordion = new bootstrap.Collapse(e), this.mobileCurrentAccordion.show()), e = document.getElementById("mobilemenu-related"), (t = document.getElementById("mobilemenu-cdcmore")) && (t.querySelector(".cdc-megamenu__heading").remove(), (n = t.querySelector(".cdc-megamenu__links").childNodes[1]).removeAttribute("class"), n.removeAttribute("role"), t.querySelector(".accordion-body").prepend(n), t.querySelector(".cdc-megamenu__links").remove()), e && t ? (this.mobileCurrentAccordion = new bootstrap.Collapse(e), this.mobileCurrentAccordion.show(), this.mobileCurrentAccordion = new bootstrap.Collapse(t), this.mobileCurrentAccordion.show()) : t && (this.mobileCurrentAccordion = new bootstrap.Collapse(t), this.mobileCurrentAccordion.show())), this.elements.pagingButton && (this.elements.pagingButton.onclick = function() {
                a.elements.navbar.scrollBy({
                    left: 100,
                    behavior: "smooth"
                })
            }), null != (n = this.elements.mobileAccordion) && n.length && this.elements.mobileAccordion.forEach(function(e) {
                e.addEventListener("click", function(e) {
                    e.preventDefault(), e.stopPropagation()
                }), e.hasEventListener = !0
            }), window.addEventListener("resize", function() {
                a.hidePagingButton()
            }))
        }
        return _createClass(o, [{
            key: "hidePagingButton",
            value: function() {
                var t = 0,
                    e = document.querySelectorAll(".cdc-mobile-navbar-links a");
                null != e && e.length && (e.forEach(function(e) {
                    t += e.offsetWidth + 18
                }), t <= this.elements.navbar.offsetWidth ? this.elements.pagingButton.style.display = "none" : this.elements.pagingButton.style.display = "block")
            }
        }]), o
    }()),
    USWDSBanner = (CDCMobileMenu.SELECTOR = ".cdc-header__logo-menu-search__mobile .dropdown-toggle", function() {
        function t() {
            var e = this;
            _classCallCheck(this, t), this.banner = document.querySelector(".cdc-site-gov-notice"), this.bannerBtn = document.querySelector('a[data-bs-toggle="collapse"'), this.bannerBody = document.querySelector("#gov-notice"), CDC.Page.on("init", function() {
                return e.init()
            })
        }
        return _createClass(t, [{
            key: "init",
            value: function() {
                var t = this;
                this.banner && this.bannerBtn.addEventListener("click", function(e) {
                    e.target.classList.contains("collapsed") ? t.bannerBody.setAttribute("aria-hidden", !0) : t.bannerBody.setAttribute("aria-hidden", !1)
                })
            }
        }]), t
    }()),
    CDCTopMenu = function() {
        function t() {
            var e = this;
            _classCallCheck(this, t), CDC.Page.on("init", function() {
                return e.init()
            })
        }
        return _createClass(t, [{
            key: "init",
            value: function() {
                var e, t, n, a, o, i, r = document.querySelector(".cdc-header__body");
                null !== r && (t = r.querySelector(".cdc-header__menu"), e = r.querySelector(".cdc-header__links"), t || e || r.classList.add("align-to-bottom"), t = document.querySelector(".cdc-megamenu")) && (n = document.body.classList.contains("cdc-megamenu-open"), new MutationObserver(function(e) {
                    e.forEach(function(e) {
                        "class" === e.attributeName && (e = e.target.classList.contains("cdc-megamenu-open"), n !== e) && i(!!(n = e))
                    })
                }).observe(document.body, {
                    attributes: !0
                }), null != (a = r.querySelector("#megaButton")) && a.addEventListener("click", function(e) {
                    $(e.target).trigger("dfe_custom_interaction"), e.stopImmediatePropagation(), document.body.classList.toggle("cdc-megamenu-open")
                }), window.addEventListener("click", function(e) {
                    document.body.classList.contains("cdc-megamenu-open") && null === e.target.closest(".cdc-megamenu") && document.body.classList.toggle("cdc-megamenu-open")
                }), o = t.querySelectorAll("a, button"), (i = function(e) {
                    for (var t = 0; t < o.length; t++) o[t].setAttribute("tabindex", e ? "0" : "-1")
                })(), document.addEventListener("focusout", function(e) {
                    document.body.classList.contains("cdc-megamenu-open") && e.target === o[o.length - 1] && a.focus()
                }))
            }
        }]), t
    }(),
    CDCBottomMenu = function() {
        function t() {
            var e = this;
            _classCallCheck(this, t), this.footer = document.querySelector(".cdc-footer"), this.footer && (this.innerFooter = this.footer.querySelector(".cdc-footer__inner"), this.links = this.innerFooter.querySelectorAll('[data-bs-toggle="collapse"'), this.subnavs = this.innerFooter.querySelectorAll(".cdc-footer__subnav"), CDC.Page.on("init", function() {
                return e.init()
            }))
        }
        return _createClass(t, [{
            key: "init",
            value: function() {
                var a = this;
                this.links.forEach(function(e) {
                    var n = document.querySelector("".concat(e.getAttribute("href")));
                    n.setAttribute("aria-hidden", !0), n.setAttribute("data-height", n.clientHeight), e.addEventListener("click", function(e) {
                        var t = n.classList.contains("show");
                        new MutationObserver(function(e) {
                            e.forEach(function(e) {
                                "class" === e.attributeName && (e = e.target.classList.contains("show"), t !== e) && (t = e, a.innerFooter.style.paddingBottom = "".concat(e ? n.getAttribute("data-height") : 0, "px"))
                            })
                        }).observe(n, {
                            attributes: !0
                        })
                    })
                })
            }
        }]), t
    }(),
    CDCModules = function() {
        function a() {
            _classCallCheck(this, a)
        }
        return _createClass(a, null, [{
            key: "load",
            value: function() {
                Object.entries(a.MODULES).forEach(function(e) {
                    var e = _slicedToArray(e, 2),
                        t = e[0],
                        n = e[1];
                    !a.loaded[t] && $(n.selector).length && (n.js && (e = CDC.Common.toArray(n.js).filter(function(e) {
                        return !!String(e || "").trim()
                    }).map(function(e) {
                        return CDC.tpPath + e
                    }), CDC.Common.loadJS(e, function() {
                        return a.ready(t, n)
                    })), n.css) && (e = CDC.Common.toArray(n.css).filter(function(e) {
                        return !!String(e || "").trim()
                    }).map(function(e) {
                        return CDC.tpPath + e
                    }), CDC.Common.loadCSS(e))
                })
            }
        }, {
            key: "ready",
            value: function(e, t) {
                console.info("Module ".concat(e, " ready")), a.loaded[e] = !0
            }
        }]), a
    }(),
    CDCNavigation = (_defineProperty(CDCModules, "loaded", {}), _defineProperty(CDCModules, "minSuffix", CDC.Common.isProd ? ".min" : ""), _defineProperty(CDCModules, "MODULES", {
        datatable: {
            selector: ".cdc-datatable-module",
            js: "/TemplatePackage/5.0/js/modules/datatable".concat(CDCModules.minSuffix, ".js")
        },
        sortfilter: {
            selector: "sort-filter-root",
            js: ["/TemplatePackage/5.0/js/modules/sortfilter.js", "/TemplatePackage/contrib/apps/sortfilter.js"],
            css: "/TemplatePackage/5.0/css/modules/sortfilter.min.css"
        },
        slider: {
            selector: ".cdc-slider",
            js: ["/TemplatePackage/5.0/js/modules/slider.js"]
        },
        jumplinks: {
            selector: ".dfe-callout--jump-link",
            js: "/TemplatePackage/5.0/js/modules/jump-links".concat(CDCModules.minSuffix, ".js")
        },
        contentcollection: {
            selector: "content-collection",
            js: "/TemplatePackage/contrib/apps/contentcollection/widget.js"
        },
        orgChartAccordion: {
            selector: '[data-app="orgChart"][data-type="accordion"]',
            js: "/TemplatePackage/contrib/apps/orgchart/react-accordions.js"
        },
        orgChartInteractive: {
            selector: '[data-app="orgChart"][data-type="interactive"]',
            js: "/TemplatePackage/contrib/apps/orgchart/react-orgcharts.js"
        }
    }), function() {
        function e() {
            _classCallCheck(this, e), _defineProperty(this, "nav", {}), _defineProperty(this, "flatNav", []), _defineProperty(this, "site", {}), _defineProperty(this, "nodes", {}), _defineProperty(this, "homepage", {}), _defineProperty(this, "toc", {}), _defineProperty(this, "audienceNames", {
                gen: CDC_Lang.__("For Everyone"),
                hcp: CDC_Lang.__("Health Care Providers"),
                php: CDC_Lang.__("Public Health")
            }), _defineProperty(this, "currentNormalizedUrl", CDC.Common.normalizeUrl(location.href)), _defineProperty(this, "excludedTemplates", ["cdc_homepage", "cdc_sitemap", "cdc_outbreak_homepage", "cdc_form_confirmation", "cdc_news"]), _defineProperty(this, "navCurrent", null), _defineProperty(this, "navCurrentIndex", 0), _defineProperty(this, "navNext", null), this.init()
        }
        return _createClass(e, [{
            key: "init",
            value: function() {
                var e = this;
                CDC.Page.syndicated ? console.debug("CDCNavigation: syndicated content, skip navigation.") : "cdc_homepage" !== CDC.Page.type && (this.nodes = {
                    content: document.querySelector("#content"),
                    rightRail: document.querySelector(".page-right-rail"),
                    otp: document.querySelector(".on-this-page "),
                    related: document.querySelector("[data-related-nav]"),
                    related_mobile: document.querySelector("[data-related-nav-mobile]"),
                    journey: document.querySelector("[data-journey-next]")
                }, this.load().then(function() {
                    return e.render()
                }), this.addSkipToOTP())
            }
        }, {
            key: "load",
            value: function() {
                var a = this;
                return new Promise(function(t, n) {
                    var e;
                    return "object" === _typeof(window.CDC_SITE_NAV) ? (a.processNav(Object.assign({}, window.CDC_SITE_NAV)), t()) : "localhost" !== window.location.hostname && CDC.Page.config.nav && CDC.Page.context ? (e = CDC.Page.config.nav + (CDC.Page.isSpanish ? "/es" : "") + "/nav.".concat(CDC.Page.context, ".json"), void $.ajax({
                        url: e,
                        method: "get",
                        contentType: "json"
                    }).then(function(e) {
                        return a.processNav(Object.assign({}, e)), t()
                    }).catch(function(e) {
                        return n(e)
                    })) : t()
                })
            }
        }, {
            key: "processNav",
            value: function(n) {
                var a = this;
                this.nav = n, this.site = Object.assign(this.site, n.site), this.site.homepage && (this.homepage = this.site.homepage), CDCPage.AUDIENCES.forEach(function(e) {
                    var t;
                    null != (t = a.nav[e]) && t.length && (a.flatNav = a.flatNav.concat(a.getFlatNavs(a.nav[e], e)), a.nav[e] = n[e])
                }), !this.navNext && this.flatNav.length && this.isCurrentNav(this.flatNav[0]) && (this.navNext = this.flatNav[0]), CDC.Page.emit("navLoaded", this.nav)
            }
        }, {
            key: "addSkipToOTP",
            value: function() {
                var e = document.querySelector(".on-this-page"),
                    t = document.getElementById("skipmenu");
                e && t && (e.id = "first-on-this-page", (e = document.createElement("a")).href = "#first-on-this-page", e.textContent = CDC_Lang.__("Skip directly to On This Page"), e.classList.add("usa-skipnav"), t.appendChild(e))
            }
        }, {
            key: "processSiteAlert",
            value: function() {
                if ((null == (e = this.site) || null == (e = e.alert) ? void 0 : e.enabled) || !1) {
                    var e = (null == (e = this.site) || null == (e = e.alert) ? void 0 : e.title) || !1,
                        t = (null == (t = this.site) || null == (t = t.alert) ? void 0 : t.body) || !1,
                        n = (null == (n = this.site) || null == (n = n.alert) ? void 0 : n.type) || !1,
                        a = (null == (a = this.site) || null == (a = a.alert) ? void 0 : a.link) || !1,
                        o = (null == (o = this.site) || null == (o = o.alert) ? void 0 : o.link_text) || !1,
                        i = document.querySelector("[data-cdc-site-alert]");
                    if (n && i && e && t) {
                        var a = o && a ? '<a class="alert-action-link" href="'.concat(CDC.cleanAttr(a), '">').concat(o, "</a>") : "",
                            o = String(e || "").trim() ? '<div class="alert-heading">'.concat(e, "</title></div>") : "",
                            e = String(t || "").trim() ? '<div class="alert-body">'.concat(t, "</div>") : "",
                            r = "alert-info";
                        switch (n) {
                            case "urgent":
                            case "warning":
                            case "error":
                                r = "alert-urgent";
                                break;
                            case "info":
                            case "notification":
                            case "success":
                                r = "alert-info";
                                break;
                            default:
                                r = "alert-urgent"
                        }
                        $(i).prepend('\n\t\t\t<div class="site-alert alert '.concat(r, '" role="status" aria-live="polite">\n\t\t\t\t<div class="site-alert__wrapper">\n\t\t\t\t\t<div class="site-alert__body">\n\t\t\t\t\t\t').concat(o, "\n\t\t\t\t\t\t").concat(e, "\n\t\t\t\t\t\t").concat(a, "\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t"))
                    }
                }
            }
        }, {
            key: "getFlatNavs",
            value: function(e, o, i, r) {
                var s = this,
                    l = (r = r || 1, []);
                return Array.isArray(e) && e.forEach(function(e) {
                    var t, n, a;
                    e.audience = o, e.level = r, i && (e.parent = i), !s.navCurrent && null != e && e.url && s.isCurrentNav(e) && ((s.navCurrent = e).active = !0), s.navCurrent && !s.navNext && (s.navCurrent.parent ? (t = s.navCurrent.parent.children, a = s.nav[o].findIndex(function(e) {
                        return e.post_id === s.navCurrent.parent.post_id
                    }), n = t.findIndex(function(e) {
                        return e.post_id === s.navCurrent.post_id
                    }), a !== s.nav[o].length - 1 ? n === t.length - 1 ? s.navNext = s.nav[o][a + 1] : n !== t.length - 1 && (s.navNext = t[n + 1]) : a === s.nav[o].length - 1 && (n === t.length - 1 ? s.nav[o][0].homepage ? s.navNext = s.nav[o][1] : s.navNext = s.nav[o][0] : n !== t.length - 1 && (s.navNext = t[n + 1]))) : (a = s.nav[o].findIndex(function(e) {
                        return e.post_id === s.navCurrent.post_id
                    }), s.navCurrent.children && 0 < s.navCurrent.children.length ? s.navNext = s.navCurrent.children[0] : s.navCurrent.children && 0 !== s.navCurrent.children.length || (a !== s.nav[o].length - 1 ? s.navNext = s.nav[o][a + 1] : s.nav[o][0].homepage ? s.navNext = s.nav[o][1] : s.navNext = s.nav[o][0]))), l.push(e), null != (t = e.children) && t.length && (l = l.concat(s.getFlatNavs(e.children, o, e, r + 1)))
                }), l
            }
        }, {
            key: "isCurrentNav",
            value: function(e) {
                var t = CDC.Page.postId,
                    n = !1;
                return n = (t = this.testPostId ? this.testPostId : t) ? t === e.post_id : CDC.Common.normalizeUrl(null == e ? void 0 : e.url) === this.currentNormalizedUrl, CDC.Page.isEnglish || CDC.Page.isSpanish || !Array.isArray(e.alt_langs) || (e = e.alt_langs.find(function(e) {
                    return (null == e ? void 0 : e.post_id) === t
                }), n = n || !!e), n
            }
        }, {
            key: "testNav",
            value: function(e) {
                var t = this;
                this.navCurrent = null, this.navNext = null, this.testPostId = parseInt(e), this.load().then(function() {
                    var e;
                    CDC.Page.audience = null == (e = t.navCurrent) ? void 0 : e.audience, t.render()
                })
            }
        }, {
            key: "render",
            value: function() {
                this.nav && (this.nodes.related && this.renderRelated(), this.nodes.journey && this.renderJourney(), this.renderBackToTopBtn(), this.renderLangLinks(), this.renderBreadcrumb(), this.updatePageTitleBar(), this.processSiteAlert(), this.renderTOC(), this.toggleAudiences(), this.setOTPPosition())
            }
        }, {
            key: "setOTPPosition",
            value: function() {
                var e, t = document.querySelector(".cdc-dfe-body__center h2"),
                    n = document.querySelector(".page-right-rail__static");
                t && n && CDC.Viewport.isDesktop() && (e = t.offsetHeight, t = t.offsetTop + e, t = Math.min(e, t), n.style.marginTop = "".concat(t, "px"), e === t) && (this.nodes.otp.style.marginTop = "".concat(10, "px"))
            }
        }, {
            key: "fillL1sAbove",
            value: function(e, t, n, a, o, i) {
                for (var r = Math.min(a, t), s = 1; s <= r && 0 < i; s++) {
                    var l = (t - s + e.length) % e.length;
                    l !== o && 0 <= l && (n.unshift(e[l]), i--)
                }
                return i
            }
        }, {
            key: "fillItemsBelow",
            value: function(e, t, n, a, o, i) {
                for (var r = (t + 1) % e.length, s = Math.min(a, e.length - t - 1), l = 0; l < s && 0 < i; l++) r !== o && r < e.length && (n.push(e[r]), i--), r = (r + 1) % e.length;
                return i
            }
        }, {
            key: "renderRelated",
            value: function() {
                var n = this;
                if (this.nodes.related && this.navCurrent) {
                    var a = [],
                        e = 5,
                        t = CDC.Page.audience;
                    if (Array.isArray(this.nav[t])) {
                        var o = this.nav[t].filter(function(e, t) {
                                return !e.homepage
                            }),
                            t = (t = this.nav[t].filter(function(e) {
                                return e.homepage
                            })).length ? t[0] : {},
                            i = o.length;
                        if (this.nodes.related && this.navCurrent) {
                            if (this.nodes.related.innerHTML = "", this.navCurrentIndex = o.findIndex(function(e) {
                                    return (null == e ? void 0 : e.post_id) === (null == (e = n.navCurrent) ? void 0 : e.post_id)
                                }), 1 === (null == (u = this.navCurrent) ? void 0 : u.level)) {
                                var r = N(o[this.navCurrentIndex]);
                                if (6 === r.length || e === r.length) a.push.apply(a, _toConsumableArray(r));
                                else if (r.length > e)
                                    for (var s = 0; s < e; s++) a.push(r[s]);
                                else if (r.length < e) {
                                    var l = e - r.length;
                                    if (0 === this.navCurrentIndex) {
                                        var c, d = _createForOfIteratorHelper(o);
                                        try {
                                            for (d.s(); !(c = d.n()).done;)
                                                if ("break" === function() {
                                                        var t = c.value;
                                                        if (!(r.length < e)) return "break";
                                                        null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                                            return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                                        }) && r.push(t)
                                                    }()) break
                                        } catch (e) {
                                            d.e(e)
                                        } finally {
                                            d.f()
                                        }
                                        a = _toConsumableArray(r)
                                    } else if (0 !== this.navCurrentIndex && this.navCurrentIndex !== i - 1 && this.navCurrentIndex !== Math.floor(i / 2)) {
                                        var u = o.length - 1;
                                        if (0 === r.length) this.navCurrentIndex > Math.floor(i / 2) ? this.navCurrentIndex === u - 1 ? ((w = []).push(o[u]), this.fillL1sAbove(o, u - 1, w, 4, this.navCurrentIndex, l - 1), (r = r.concat(w)).splice(e)) : this.navCurrentIndex === u - 2 ? (0 < (k = this.fillItemsBelow(o, u - 2, w = [], 2, this.navCurrentIndex, l)) && this.fillL1sAbove(o, u - 2, w, 3, this.navCurrentIndex, k), (r = r.concat(w)).splice(e)) : this.navCurrentIndex === u - 3 ? (0 < (k = this.fillItemsBelow(o, u - 3, w = [], 3, this.navCurrentIndex, l)) && this.fillL1sAbove(o, u - 3, w, 2, this.navCurrentIndex, k), (r = r.concat(w)).splice(e)) : this.navCurrentIndex === u - 4 ? (w = [], 2 <= o.length ? 0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, w, 2, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, w, 3, this.navCurrentIndex, k) : 0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, w, 1, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, w, 4, this.navCurrentIndex, k), (r = r.concat(w)).splice(e)) : (u = this.navCurrentIndex, w = Math.max(0, u - 2), T = u + 1, D = u + 3, w = o.slice(w, 1 + (u - 1)).concat(o.slice(T, D + 1)), r = r.concat(w.slice(0, l))) : this.navCurrentIndex < Math.floor(i / 2) && (1 === this.navCurrentIndex ? (0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, u = [], 1, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, u, 4, this.navCurrentIndex, k), (r = r.concat(u)).splice(e)) : 2 === this.navCurrentIndex ? (0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, T = [], 2, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, T, 3, this.navCurrentIndex, k), (r = r.concat(T)).splice(e)) : 3 === this.navCurrentIndex ? (D = [], o.length >= this.navCurrentIndex + 3 ? 0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, D, 2, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, D, 3, this.navCurrentIndex, k) : 0 < (k = this.fillL1sAbove(o, this.navCurrentIndex, D, 3, this.navCurrentIndex, l)) && this.fillItemsBelow(o, this.navCurrentIndex, D, 2, this.navCurrentIndex, k), (r = r.concat(D)).splice(e)) : (w = this.navCurrentIndex, u = Math.max(0, w - 2), T = w + 1, k = w + 3, D = o.slice(u, 1 + (w - 1)).concat(o.slice(T, k + 1)), r = r.concat(D.slice(0, l))));
                                        else {
                                            var u = (this.navCurrentIndex - 1 + o.length) % o.length,
                                                h = o[u];
                                            0 === r.length ? r.unshift(h) : r.push(h), l--;
                                            for (var m = 1; m <= l; m++) {
                                                var p = (this.navCurrentIndex + m) % o.length;
                                                null != (p = h = o[p]) && p.url && null != (p = h) && p.title && !this.isCurrentNav(h) && !r.find(function(e) {
                                                    return (null == e ? void 0 : e.post_id) === (null == (e = h) ? void 0 : e.post_id)
                                                }) && r.push(h)
                                            }
                                        }
                                        a = _toConsumableArray(r)
                                    } else if (this.navCurrentIndex === i - 1) {
                                        for (var f = [], C = this.navCurrentIndex - 1; C >= Math.max(this.navCurrentIndex - l, 0); C--) ! function() {
                                            var t = o[C];
                                            null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !r.find(function(e) {
                                                return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                            }) && f.unshift(t)
                                        }();
                                        r = r.concat(f), a = _toConsumableArray(r)
                                    } else if (this.navCurrentIndex === Math.floor(i / 2) && 0 === r.length) {
                                        for (var g = this.navCurrentIndex - 2; g <= this.navCurrentIndex + 3; g++) ! function() {
                                            var t = o[(g + i) % i];
                                            null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !r.find(function(e) {
                                                return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                            }) && r.push(t)
                                        }();
                                        a = _toConsumableArray(r)
                                    } else if (this.navCurrentIndex === Math.floor(i / 2) && 0 !== r.length) {
                                        for (var v = this.navCurrentIndex - 1; v <= this.navCurrentIndex + (l - 1); v++) ! function() {
                                            var t = o[(v + i) % i];
                                            null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !r.find(function(e) {
                                                return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                            }) && r.push(t)
                                        }();
                                        a = _toConsumableArray(r)
                                    }
                                }
                            } else if (2 === (null == (w = this.navCurrent) ? void 0 : w.level) && this.navCurrent.parent) {
                                var y = N(this.navCurrent.parent),
                                    b = o.findIndex(function(e) {
                                        return e.title === n.navCurrent.parent.title
                                    });
                                if (y.length - 1 === e) y = y.filter(function(e) {
                                    return e.title !== n.navCurrent.title
                                }), a = [o[b]].concat(_toConsumableArray(y));
                                else if (y.length - 1 < e) {
                                    for (var _ = 0; _ <= y.length; _++) ! function() {
                                        var t = y[_];
                                        null != t && t.url && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                            return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                        }) && a.push(t)
                                    }();
                                    a.unshift(o[b]), a.length < e && 0 !== b && a.push(o[b - 1])
                                } else if (y.length - 1 > e) {
                                    var w, k, S, D, L = e,
                                        T = y.length - 1,
                                        E = y.findIndex(function(e) {
                                            return e.title === n.navCurrent.title
                                        });
                                    if (0 === E) {
                                        var A, P = _createForOfIteratorHelper(y);
                                        try {
                                            for (P.s(); !(A = P.n()).done;)
                                                if ("break" === function() {
                                                        var t = A.value;
                                                        if (!(a.length < e)) return "break";
                                                        null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                                            return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                                        }) && a.push(t)
                                                    }()) break
                                        } catch (e) {
                                            P.e(e)
                                        } finally {
                                            P.f()
                                        }
                                        a = _toConsumableArray(a)
                                    }
                                    if (1 === E && (0 < (S = this.fillL1sAbove(y, E, k = [], 1, E, L)) && this.fillItemsBelow(y, E, k, 4, E, S), (a = a.concat(k)).splice(e)), E === Math.floor(y.length / 2)) {
                                        for (var x = E - 2; x <= E + 2; x++) ! function() {
                                            var e = (x + y.length) % y.length,
                                                t = y[e];
                                            null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                                return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                            }) && a.push(t)
                                        }();
                                        a = _toConsumableArray(a)
                                    }
                                    if (E === T - 2 && (0 < (S = this.fillItemsBelow(y, T - 2, D = [], 2, E, L)) && this.fillL1sAbove(y, T - 2, D, 3, E, S), (a = a.concat(D)).splice(e)), E === T - 1 && ((u = []).push(y[T]), this.fillL1sAbove(y, T - 1, u, 4, E, L - 1), (a = a.concat(u)).splice(e)), E === T) {
                                        for (var I = [], M = E - 1; M >= Math.max(E - L, 0); M--) ! function() {
                                            var t = y[M];
                                            null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                                return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                            }) && I.unshift(t)
                                        }();
                                        a = _toConsumableArray(a = a.concat(I))
                                    }
                                    0 !== E && E !== y - 1 && E !== Math.floor(y.length / 2) && (w = Math.max(0, E - 2), k = E + 1, S = E + 2, D = y.slice(w, 1 + (E - 1)).concat(y.slice(k, S + 1)), a = _toConsumableArray(a = a.concat(D.slice(0, L)))), a.unshift(o[b])
                                }
                                var q = a.length;
                                if (a.length < e)
                                    for (var O = 0; O <= e - q; O++) ! function() {
                                        var e = (b + O) % o.length,
                                            t = o[e];
                                        null != t && t.url && null != t && t.title && !n.isCurrentNav(t) && !a.find(function(e) {
                                            return (null == e ? void 0 : e.post_id) === (null == t ? void 0 : t.post_id)
                                        }) && a.push(t)
                                    }()
                            }
                            a.length && (a = CDC.Common.unique(a), this.nodes.related.classList.add("related-pages"), u = CDC_Lang.__("Related Pages"), T = CDC_Lang.__("View All"), w = '\n\t\t\t<div class="related-pages__body">\n\t\t\t\t<h2 class="related-pages__heading">'.concat(u, "</h2>\n\t\t\t\t<ul>\n\t\t\t\t\t").concat(a.map(function(e) {
                                var t;
                                if (null == e || null == (t = e.exclude) || !t.relatedPages) return '<li>\n\t\t\t\t\t\t\t<a class="truncate truncate__60" href="'.concat(CDC.cleanAttr(e.url), '">').concat(null == e ? void 0 : e.text, "</a>\n\t\t\t\t\t\t</li>")
                            }).join("\n"), "\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t"), u = (null == (k = this.homepage) ? void 0 : k.url) || (null == (S = this.site) ? void 0 : S.site_index) || (null == (D = this.site) ? void 0 : D.path), (null != (k = this.site) && k.title || null != (S = this.site) && S.short_title) && u && (w += '\n\t\t\t\t<div class="related-pages__footer">\n\t\t\t\t\t<a href="'.concat(CDC.cleanAttr(t.url || u), '">\n\t\t\t\t\t\t<span>').concat(T, "</span>\n\t\t\t\t\t\t<span>").concat(null != (D = this.site) && D.short_title ? this.site.short_title : this.site.title, "</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t")), $(this.nodes.related).safehtml(w), $(this.nodes.related_mobile).safehtml(w))
                        }
                    }
                }

                function N(e) {
                    var t = [];
                    if (null != e && e.children) {
                        var n, a = _createForOfIteratorHelper(e.children);
                        try {
                            for (a.s(); !(n = a.n()).done;) {
                                var o, i, r = n.value;
                                null != (o = r.exclude) && o.relatedPages || (t.push(r), i = N(r), t = t.concat(i))
                            }
                        } catch (e) {
                            a.e(e)
                        } finally {
                            a.f()
                        }
                    }
                    return t
                }
            }
        }, {
            key: "renderBackToTopBtn",
            value: function() {
                function e() {
                    var e, t = null,
                        n = null,
                        n = null == (n = n = document.querySelector(".site-footer") ? document.querySelector(".site-footer") : n) ? void 0 : n.getBoundingClientRect().top;
                    CDC.Viewport.isDesktop() ? (o.nodes.related && 0 < o.nodes.related.children.length ? (t = o.nodes.related, a = 102) : o.nodes.otp && (t = o.nodes.otp, a = 172), t ? !((e = t.getBoundingClientRect().top + (r + 36 + a) + t.offsetHeight) < window.innerHeight && n < window.innerHeight) && e < window.innerHeight ? (i.setAttribute("tabindex", 0), i.classList.add("active")) : (i.setAttribute("tabindex", -1), i.classList.remove("active")) : !((e = (t = document.querySelector(".cdc-header__desktop")).getBoundingClientRect().top + t.offsetHeight) <= 0 && n < window.innerHeight) && e <= 0 ? (i.setAttribute("tabindex", 0), i.classList.add("active")) : (i.setAttribute("tabindex", -1), i.classList.remove("active"))) : !(window.scrollY > r && n < window.innerHeight) && window.scrollY > r ? (i.setAttribute("tabindex", 0), i.classList.add("active")) : (i.setAttribute("tabindex", -1), i.classList.remove("active"))
                }
                var t, a, o = this,
                    i = CDC.make("button"),
                    r = (i.classList.add("back-to-top"), i.setAttribute("tabindex", -1), i.innerHTML += '<span class="cdc-fa-angle-up"></span>', i.innerHTML += '<span class="back-to-top__info screen-reader-only">'.concat(CDC_Lang.__("Back to Top"), "</span>"), i.addEventListener("click", function() {
                        window.scrollTo({
                            top: 0,
                            behavior: "smooth"
                        })
                    }), null != (t = this.nodes.content) && t.appendChild(i), 36);
                e(), window.addEventListener("scroll", CDC.Common.throttle(e, 75))
            }
        }, {
            key: "renderJourney",
            value: function() {
                var e, t, n = this;
                if (this.nodes.journey) {
                    for (this.nodes.journey.innerHTML = ""; this.navNext && this.navNext.exclude && this.navNext.exclude.journey;) {
                        var a = this.flatNav.findIndex(function(e) {
                            return e === n.navNext
                        });
                        this.navNext = this.flatNav[a + 1]
                    }!this.navNext || !(t = (t = this.navNext).audience !== CDC.Page.audience ? this.nav[CDC.Page.audience][0] : t) || t === this.navCurrent || null != (e = t) && null != (e = e.exclude) && e.journey || $(this.nodes.journey).safehtml('\n            <a href="'.concat(CDC.cleanAttr(t.url), '" class="cdc-journey-nav">\n                <span>').concat(null == (e = t) ? void 0 : e.text, "</span>\n            </a>\n        "))
                }
            }
        }, {
            key: "renderLangLinks",
            value: function() {
                var e, n, t = document.querySelector("main [data-alt-langs]"),
                    a = ((t = t || document.querySelector("main .cdc-page-title-bar__item--languages")) || (t = CDC.make("div"), null != (e = document.querySelector(".cdc-page-title-bar")) && e.append(t)), []),
                    o = [];
                Array.isArray(null == (e = this.navCurrent) ? void 0 : e.alt_langs) && (a = a.concat(this.navCurrent.alt_langs)), null != (e = this.navCurrent) && e.post_id && this.navCurrent.post_id !== CDC.Page.postId && a.push(this.navCurrent), "object" === _typeof(this.site.motionpoint) && Object.keys(this.site.motionpoint).length && Object.entries(this.site.motionpoint).forEach(function(e) {
                    var e = _slicedToArray(e, 2),
                        t = e[0],
                        e = e[1];
                    a.push({
                        lang: t,
                        url: e + CDC.parseUrl().pathname,
                        post_id: 0
                    })
                }), a.length && (a.forEach(function(e) {
                    e = Object.assign({}, e);
                    var t = String(e.lang),
                        n = String(e.url),
                        e = parseInt(e.post_id),
                        a = CDC_Lang.getLabel(t);
                    n && a && e !== CDC.Page.postId && o.push({
                        lang: t,
                        label: a,
                        url: n
                    })
                }), t.innerHTML = "", t.classList.add("cdc-page-title-bar__item"), t.classList.add("cdc-page-title-bar__item--languages"), o.length) && (1 === o.length && (e = o[0], t.append(CDC.make("a", "cdc-page-title-bar__item", {
                    href: e.url,
                    lang: e.lang
                }, e.label))), 1 < o.length) && (t.append(CDC.make("a", "nav-link dropdown-toggle", {
                    href: "#",
                    "data-bs-toggle": "dropdown"
                }, CDC_Lang.__("Languages"))), n = CDC.make("ul", "dropdown-menu", {
                    role: "menu"
                }), o.forEach(function(e) {
                    var t = CDC.make("li"),
                        e = CDC.make("a", "", {
                            href: e.url,
                            lang: e.lang
                        }, e.label);
                    t.append(e), n.append(t)
                }), t.append(n))
            }
        }, {
            key: "renderBreadcrumb",
            value: function() {
                var e, t, n = document.querySelector(".cdc-main"),
                    a = document.querySelector(".cdc-page-title-bar");
                n && (t = null, this.site.core_topic_text && this.site.core_topic_url && (t = CDC.make("div", "cdc-page-breadcrumb cdc-page-offset noindex"), (e = CDC.make("div", "cdc-page-breadcrumb__item breadcrumbs breadcrumbs--core-topic")).innerHTML = '\n\t\t\t\t<span class="breadcrumb breadcrumb--1">\n\t\t\t\t\t<a href="'.concat(CDC.cleanAttr(this.site.core_topic_url), '">').concat(this.site.core_topic_text, "</a>\n\t\t\t\t</span>\n\t\t\t")), e) && (t.append(e), this.excludedTemplates.includes(CDC.Page.dfeTemplate) ? (t.classList.remove("cdc-page-breadcrumb", "cdc-page-offset", "noindex"), t.classList.add("cdc-page-title-bar__item--breadcrumbs"), null != a && a.prepend(t)) : n.prepend(t))
            }
        }, {
            key: "updatePageTitleBar",
            value: function() {
                var e, t, n, a = document.querySelector(".cdc-page-title-bar"),
                    o = document.querySelector(".cdc-page-title");
                a && (this.excludedTemplates.includes(CDC.Page.dfeTemplate) ? (Object.assign(a.style, {
                    display: "flex",
                    justifyContent: "end",
                    order: "1"
                }), o.style.order = "2", o.querySelector("h1").style.marginTop = "1rem", (o = document.querySelector(".cdc-page-title-bar__item--languages a")) && o.classList.add("language-links")) : (o = (null == (o = this.navCurrent) ? void 0 : o.audience) || (null == (o = window.CDC_POST) ? void 0 : o.audience), e = CDC.make("div", "cdc-page-title-bar__item--icon"), t = CDC.make("div", "cdc-page-title-bar__item--audience"), o && (e.classList.add({
                    gen: "shield-heart-light",
                    hcp: "stethoscope-light",
                    php: "chart-line-light"
                }[o]), t.innerHTML = this.audienceNames[o] || "", a.append(e, t)), o = a.querySelector(".cdc-page-title-bar__item--date"), e = a.querySelector(".cdc-page-title-bar__item--languages"), t = CDC.make("div", "cdc-page-title-bar__item--divider"), n = CDC.make("div", "cdc-page-title-bar__content"), o && n.append(o), o && e && n.append(t), e && n.append(e), a.append(n)))
            }
        }, {
            key: "updateFocusability",
            value: function() {
                var n, e = document.querySelector(".page-toc #contents"),
                    t = document.querySelector(".read-more-fade");
                e && t && (n = t.getBoundingClientRect().top, document.querySelectorAll(".page-toc #contents li").forEach(function(e) {
                    var t = e.getBoundingClientRect().bottom - parseInt(window.getComputedStyle(e).marginBottom);
                    n < t ? e.querySelector("a").setAttribute("tabindex", "-1") : e.querySelector("a").removeAttribute("tabindex")
                }))
            }
        }, {
            key: "renderTOC",
            value: function() {
                var a = this;
                if (this.navCurrent) {
                    var e = null;
                    if (null != (n = this.navCurrent.settings) && n.toc_enabled ? e = this.navCurrent : null != (n = this.navCurrent.parent) && null != (n = n.settings) && n.toc_enabled && (e = this.navCurrent.parent), e && Array.isArray(e.children) && e.children.length) {
                        if (this.toc = {
                                label: CDC_Lang.__("Table of Contents"),
                                title: String(null == (n = e.settings) ? void 0 : n.toc_title).trim() || e.title,
                                type: (null == (n = e.settings) ? void 0 : n.toc_type) || "numbered",
                                element: CDC.make("div", "page-toc", {
                                    id: "toc"
                                }),
                                nodes: {},
                                nav: e,
                                items: e.children,
                                isOpen: !1
                            }, n = 1 === this.navCurrent.level, this.toc.element || (this.toc.element = CDC.make("div", "page-toc")), this.toc.element.innerHTML = "", this.toc.nodes = {
                                wrapper: this.toc.element,
                                heading: CDC.make("div", "page-toc__heading"),
                                list: CDC.make("numbered" === this.toc.type ? "ol" : "ul", "page-toc__list"),
                                footer: CDC.make("div", "page-toc__footer")
                            }, this.toc.nodes.wrapper.append(this.toc.nodes.heading), this.toc.nodes.wrapper.append(this.toc.nodes.list), this.toc.nodes.wrapper.append(this.toc.nodes.footer), null != (t = this.nodes.related) && t.setAttribute("hidden", "hidden"), n) {
                            if (this.toc.element.classList.add("toc-l1"), !$(".dfe-section--page-summary:first").length) return void console.error("CDC_Navigation: can't place top TOC");
                            $(".dfe-section--page-summary:first").after(this.toc.element)
                        } else {
                            if (this.toc.element.classList.add("toc-l2"), !this.nodes.journey) return void console.error("CDC_Navigation: can't place bottom TOC");
                            $(this.nodes.journey).after(this.toc.element)
                        }
                        this.toc.nodes.heading.innerHTML = n ? "".concat(this.toc.label, ' <span class="title-pipe"> | </span><span class="title-break"><br></span><span class="title-desktop">').concat(this.toc.title, "</span>") : "\n\t\t\t\t".concat(this.toc.label, ' <span class="title-pipe"> | </span><span class="title-break"><br></span><a class="heading" href="').concat(CDC.cleanAttr(e.url), '">').concat(this.toc.title, "</a>\n\t\t\t"), this.toc.nodes.links = [];
                        var t, n, o, i = -1;
                        this.toc.items.forEach(function(e, t) {
                            var n = CDC.make("li"),
                                t = (e.active && (n.className = "active", i = t, 0), CDC.make("a"));
                            t.href = CDC.cleanAttr(e.url), t.innerHTML = e.text || e.title, n.appendChild(t), a.toc.nodes.links.push(t), a.toc.nodes.list.appendChild(n)
                        }), !n && (t = -1 < i ? i + 1 : 1, n = this.toc.items.length, (o = document.querySelector(".cdc-page-title")) && (this.toc.nodes.titleSub = CDC.make("div", "toc-heading"), this.toc.nodes.titleSub.innerHTML = '\n\t\t\t\t\t<a class="heading" href="'.concat(CDC.cleanAttr(e.url), '">').concat(this.toc.title, '</a>\n\t\t\t\t\t<span class="title-pipe"> | </span>\n\t\t\t\t\t<span class="title-break"><br></span>\n\t\t\t\t\t').concat(CDC_Lang.__("Page"), " ").concat(t, " ").concat(CDC_Lang.__("of"), " ").concat(n, ' <span class="pipe-2"> | </span>\n\t\t\t\t\t<a class="all-pages" href="#toc">').concat(CDC_Lang.__("All pages"), ' <span class="cdc-fa-arrow-down-long"></span></a>\n\t\t\t\t'), o.append(this.toc.nodes.titleSub), this.toc.nodes.titleSub.querySelector("a.all-pages").addEventListener("click", function() {
                            a.toggleTOC(!0)
                        })), e = this.toc.nodes.heading.querySelector("a.all-pages")) && e.addEventListener("click", function(e) {
                            e.preventDefault(), a.toggleTOC(!0)
                        }), this.toc.nodes.more = CDC.make("a", "page-toc__more", {
                            href: "#toc"
                        }, CDC_Lang.__("Show More")), this.toc.nodes.footer.append(this.toc.nodes.more), this.toc.nodes.more.addEventListener("click", function() {
                            return a.toggleTOC()
                        }), this.toc.nodes.links[this.toc.nodes.links.length - 1].offsetLeft < this.toc.nodes.list.clientWidth && this.toc.element.classList.add("page-toc--full"), this.toc.nodes.links.forEach(function(e) {
                            e.addEventListener("focus", function() {
                                e.offsetLeft > a.toc.nodes.list.clientWidth && !a.toc.isOpen && a.toggleTOC(!0)
                            })
                        }), this.toggleTOC(!1)
                    }
                }
            }
        }, {
            key: "toggleTOC",
            value: function(e) {
                this.toc.isOpen = "boolean" == typeof e ? e : !this.toc.isOpen, this.toc.element.classList.toggle("open", this.toc.isOpen), this.toc.nodes.more.innerHTML = this.toc.isOpen ? CDC_Lang.__("Show Less") : CDC_Lang.__("Show More")
            }
        }, {
            key: "toggleAudiences",
            value: function() {
                if (window.location.href.includes("/about/index.html") && document.getElementById("dfe-section__nav")) {
                    var e, t = [],
                        n = !1,
                        a = _createForOfIteratorHelper(CDCPage.AUDIENCES);
                    try {
                        for (a.s(); !(e = a.n()).done;) {
                            var o, i = e.value;
                            0 < (null == (o = CDC.Page.navigation.nav[i]) ? void 0 : o.length) && t.push(i)
                        }
                    } catch (e) {
                        a.e(e)
                    } finally {
                        a.f()
                    }
                    if (null != (s = this.navCurrent) && null != (s = s.settings) && s.toc_enabled && 1 === this.navCurrent.level && (n = !0), 2 <= t.length && !n) {
                        var r, s = document.getElementById("dfe-section__nav"),
                            l = document.getElementById("dfe-section__nav-links"),
                            c = (document.getElementById("dfe-section__nav__header").innerHTML += "\n\t\t\t\t\t<h2>".concat(CDC_Lang.__("More Information"), "</h2>\n\t\t\t\t\t"), _createForOfIteratorHelper(t));
                        try {
                            for (c.s(); !(r = c.n()).done;) {
                                var d, u = r.value;
                                l.innerHTML += '\n\t\t\t\t\t\t\t<a href="'.concat(CDC.cleanAttr((null == (d = this.site) ? void 0 : d.site_index) + "#" + u), '" class="btn btn-outline-secondary site-index-link">').concat(this.audienceNames[u], "</a>\n\t\t\t\t\t\t")
                            }
                        } catch (e) {
                            c.e(e)
                        } finally {
                            c.f()
                        }
                        s.classList.remove("hide")
                    }
                }
            }
        }]), e
    }()),
    CDCScrollProgress = function() {
        function n() {
            var e, t = this;
            _classCallCheck(this, n), _defineProperty(this, "elements", {}), _defineProperty(this, "touchStartY", 0), _defineProperty(this, "touchEndY", 0), _defineProperty(this, "scrolling", !1), _defineProperty(this, "lastScrollPosition", 0), this.elements = {
                siteHeader: document.querySelector(".cdc-header"),
                mobileTitle: document.querySelector(".cdc-header-mobile__title"),
                mobileHeader: document.querySelector(".cdc-header-mobile"),
                userJourneyMobile: document.querySelector(".user-journey__mobile"),
                userJourneyWrapper: document.querySelector(".user-journey__wrapper"),
                progressContainer: document.querySelector(".cdc-page-progress-bar"),
                progressScrubber: document.querySelector(".cdc-page-progress-bar__scrubber"),
                toTopButton: null == (e = CDC.Page) ? void 0 : e.getElement("toTopButton")
            }, !this.elements.progressContainer || document.body.scrollHeight < 1500 || (window.addEventListener("resize", function(e) {
                return t.resize(e)
            }), document.addEventListener("wheel", function(e) {
                return t.getScrollDirection(e)
            }), document.addEventListener("touchstart", function(e) {
                t.touchstartY = e.changedTouches[0].screenY
            }), document.addEventListener("touchend", function(e) {
                t.touchendY = e.changedTouches[0].screenY, t.touchendY < t.touchstartY ? t.logDirection("down", "swipe") : t.touchendY > t.touchstartY && t.logDirection("up", "swipe")
            }), window.addEventListener("scroll", function() {
                t.lastScrollPosition = window.scrollY, t.scrolling || (window.requestAnimationFrame(function() {
                    t.scrollProgress(), t.scrolling = !1
                }), t.scrolling = !0)
            }), this.currentScrollY = 0, this.lastScrollY = 0, setTimeout(function() {
                t.adjustHeaderSpacers(), t.initialScrollY = window.pageYOffset + t.elements.mobileTitle.getBoundingClientRect().top, t.targetScrollY = t.initialScrollY + t.elements.mobileTitle.scrollHeight, t.stickyHeaderHandler()
            }, 50))
        }
        return _createClass(n, [{
            key: "get",
            value: function() {
                var e = document.body.scrollTop || document.documentElement.scrollTop,
                    t = document.documentElement.scrollHeight - document.documentElement.clientHeight;
                return parseInt(Math.floor(e / t * 100))
            }
        }, {
            key: "logDirection",
            value: function(e, t) {}
        }, {
            key: "getScrollDirectionIsUp",
            value: function(e) {
                return e.wheelDelta ? 0 < e.wheelDelta : e.deltaY < 0
            }
        }, {
            key: "getScrollDirection",
            value: function(e) {
                this.getScrollDirectionIsUp(e) ? this.logDirection("up", "scroll") : this.logDirection("down", "scroll")
            }
        }, {
            key: "stickyHeaderHandler",
            value: function() {
                var e;
                this.currentScrollY = document.documentElement.scrollTop, this.currentScrollY > this.initialScrollY ? null != (e = this.elements.mobileHeader) && e.classList.add("title-engaged") : null != (e = this.elements.mobileHeader) && e.classList.remove("title-engaged"), this.currentScrollY > this.targetScrollY ? null != (e = this.elements.mobileHeader) && e.classList.add("title-disengaged") : null != (e = this.elements.mobileHeader) && e.classList.remove("title-disengaged"), this.currentScrollY > this.targetScrollY && this.currentScrollY <= this.lastScrollY ? null != (e = this.elements.mobileHeader) && e.classList.add("title-active") : null != (e = this.elements.mobileHeader) && e.classList.remove("title-active"), this.lastScrollY = this.currentScrollY
            }
        }, {
            key: "scrollProgress",
            value: function() {
                var e = this.get();
                this.adjustProgressBar(e), document.documentElement.style.setProperty("--progress-value", e + "%"), CDC.Viewport.isMobile() && null !== this.elements.userJourneyMobile && (e < 76 && 45 < e ? this.elements.userJourneyMobile.classList.remove("user-journey__mobile-hidden") : this.elements.userJourneyMobile.classList.add("user-journey__mobile-hidden"), 77 < e ? this.elements.userJourneyWrapper.classList.remove("d-block") : this.elements.userJourneyWrapper.classList.add("d-block")), this.stickyHeaderHandler()
            }
        }, {
            key: "resize",
            value: function() {
                this.scrollProgress(), this.adjustHeaderSpacers()
            }
        }, {
            key: "adjustHeaderSpacers",
            value: function() {
                var e = (null == (e = this.elements.mobileTitle) ? void 0 : e.offsetHeight) || 0;
                document.documentElement.style.setProperty("--mobile-header-offset", "".concat(e, "px"))
            }
        }, {
            key: "adjustProgressBar",
            value: function(e) {
                var t;
                5 < e ? (null != (t = this.elements.progressContainer) && t.classList.remove("d-none"), this.elements.progressScrubber.style.width = e + "%") : null != (t = this.elements.progressContainer) && t.classList.add("d-none")
            }
        }]), n
    }(),
    CDCSearch = function() {
        function t() {
            var e;
            _classCallCheck(this, t), this.currentTerm = "", this.currentResults = [], this.siteLimit = null, this.searchResultsUrl = CDC.Common.cleanString((null == (e = window.CDC_CONFIG) ? void 0 : e.search_url) || "https://search.cdc.gov/search/"), this.searchTypeaheadSolr = CDC.Common.cleanString((null == (e = window.CDC_CONFIG) ? void 0 : e.search_typeahead) || "https://search.cdc.gov/srch/internet_autocomplete/autocomplete"), this.typeaheadEnabled = !1 !== CDC.Page.config.search_typeahead, this.searchCompletes = [], this.init()
        }
        return _createClass(t, [{
            key: "init",
            value: function() {
                var e, t = this;
                this.desktop = document.querySelector("header form.cdc-header__search"), this.searchComponent = document.querySelector("header .cdc-header__components"), this.mobile = document.querySelector("form.cdc-mobile-search"), this.mobileSearch = document.querySelector("form.cdc-mobile-search .btn--search"), this.skipBtn = document.querySelector('#skipmenu a[href="#cdc-search"]'), this.mobile && this.mobileSearch && this.mobileSearch.addEventListener("click", function() {
                    return t.mobile.submit()
                }), this.searchResultsUrl && "es" === (null == (e = CDC) || null == (e = e.Page) ? void 0 : e.lang) && (this.searchResultsUrl += "spanish/"), document.querySelectorAll("form [data-search-input]").forEach(function(e) {
                    t.searchCompletes.push(new CDCSearchField(e, t))
                }), null != (e = this.skipBtn) && e.addEventListener("click", function() {
                    t.activateSearch()
                }), this.desktop && (this.nodes = {
                    searchToggle: this.desktop.querySelector("#cdc-search__toggle"),
                    searchInput: this.desktop.querySelector("#cdc-search__input"),
                    searchGroup: this.desktop.querySelector(".input-group"),
                    searchClear: this.desktop.querySelector("#cdc-search__clear"),
                    searchSubmit: this.desktop.querySelector("#cdc-search__submit"),
                    searchComplete: this.desktop.querySelector(".cdc-search-complete"),
                    searchCompleteResults: [],
                    localSearch: document.querySelector(".cdc-header [data-local-search]")
                }, null != (e = this.nodes.searchClear) && e.addEventListener("click", function() {
                    t.nodes.searchInput.value = "", t.desktop.classList.remove("cdc-header__search--active"), t.searchComponent.classList.remove("active"), t.currentResults = [], t.nodes.searchComplete.innerHTML = ""
                }), null != (e = this.nodes.searchToggle) && e.addEventListener("click", function(e) {
                    e.preventDefault(), t.desktop.classList.add("cdc-header__search--active"), t.searchComponent.classList.add("active"), t.nodes.searchInput.focus()
                }), this.nodes.localSearch ? (this.desktop.append(this.nodes.localSearch), null != (e = document.querySelector(".cdc-mobile-search")) && e.append(this.nodes.localSearch.cloneNode(!0)), this.nodes.localSearch.value && (this.siteLimit = this.nodes.localSearch.value)) : this.siteLimit = null == (e = this.desktop.querySelector('input[name="sitelimit"]')) ? void 0 : e.value, document.body.addEventListener("click", function(e) {
                    !t.desktop.classList.contains("cdc-header__search--active") || t.desktop === e.target || t.desktop.contains(e.target) || t.deactivateSearch()
                }), document.body.addEventListener("keyup", function(e) {
                    t.desktop.classList.contains("cdc-header__search--active") && ("Tab" === e.key ? t.desktop.contains(document.activeElement) || t.deactivateSearch() : "Escape" === e.key && (t.deactivateSearch(), t.nodes.searchToggle.focus()))
                })), this.deepLinkCheck()
            }
        }, {
            key: "activateSearch",
            value: function() {
                this.desktop.classList.add("cdc-header__search--active"), this.searchComponent.classList.add("active"), this.nodes.searchInput.focus()
            }
        }, {
            key: "deactivateSearch",
            value: function() {
                this.desktop.classList.remove("cdc-header__search--active"), this.searchComponent.classList.remove("active"), this.nodes.searchInput.blur()
            }
        }, {
            key: "isTextFoundInElement",
            value: function(e, t) {
                return !!e && (e.textContent || e.innerText).includes(t)
            }
        }, {
            key: "deepLinkCheck",
            value: function() {
                if (String(document.referrer || "").match("search")) {
                    var e = "cdc-search-text",
                        t = CDC.Common.getCookie(e);
                    if (t) {
                        document.cookie = e + "=; expires=Thu, 01 Jan 1970 00:00:00 UTC; domain=.cdc.gov; path=/;";
                        var n = new Map,
                            a = String(t).split(" ");
                        if (!(a.length <= 1)) {
                            for (var o = 0; o < a.length - 1; o++) ! function() {
                                var e = a[o] + " " + a[o + 1];
                                $("body *:contains(" + e + ")").not("script").filter(":visible").filter(function() {
                                    return $(this).children("*:contains(" + e + ")").length < 1
                                }).each(function(e, t) {
                                    n.get(t) ? n.set(t, n.get(t) + 1) : n.set(t, 1)
                                })
                            }();
                            var i, r, s = 0,
                                l = "";
                            n.forEach(function(e, t) {
                                s < e && (s = e, l = t)
                            }), s <= 0 || (e = document.querySelector("section.site-footer"), this.isTextFoundInElement(e, l.innerText)) || (t = window.getComputedStyle(l, null).getPropertyValue("font-size"), e = parseFloat(t), t = l.getBoundingClientRect(), i = window.scrollY || document.documentElement.scrollTop, r = document.documentElement.scrollHeight, t.top + i < .8 * r && $([document.documentElement, document.body]).animate({
                                scrollTop: $(l).offset().top - 3 * e
                            }, 500))
                        }
                    }
                }
            }
        }]), t
    }(),
    CDCSearchField = function() {
        function a(e, t) {
            var n = this;
            _classCallCheck(this, a), _defineProperty(this, "nodes", {
                form: null,
                searchComplete: null
            }), _defineProperty(this, "search", null), _defineProperty(this, "isOpen", !1), _defineProperty(this, "typeaheadEnabled", !0), this.element = e, this.search = t, this.element ? (this.searchTypeaheadSolr = this.search.searchTypeaheadSolr, this.searchResultsUrl = this.search.searchResultsUrl, this.typeaheadEnabled = this.search.typeaheadEnabled, "off" === this.element.dataset.searchComplete && (this.typeaheadEnabled = !1), this.nodes.form = this.element.closest("form"), this.nodes.form ? this.element.dataset.init || (null != (e = this.nodes.form.getAttribute("action")) && e.includes(this.searchResultsUrl) || this.nodes.form.setAttribute("action", this.searchResultsUrl), this.element.autocorrect = "off", this.element.spellcheck = !1, this.typeaheadEnabled && (this.element.autocomplete = "off", this.nodes.searchComplete || (this.nodes.searchComplete = CDC.Common.make("div", "cdc-search-complete"), null != (t = this.element) && t.after(this.nodes.searchComplete)), this.nodes.searchComplete) && this.element && "en" === (null == (e = CDC.Page) ? void 0 : e.lang) && (this.onQueryUpdate = CDC.Common.debounce(function() {
                return n.onQuery()
            }, 300), this.element.addEventListener("input", function() {
                return n.onQueryUpdate()
            }), this.element.addEventListener("keydown", function(e) {
                return n.onCompleteKey(e)
            }), this.nodes.searchComplete.addEventListener("keydown", function(e) {
                return n.onCompleteKey(e)
            }), this.nodes.form.addEventListener("blur", function() {
                return n.toggleComplete(!1)
            }), window.document.addEventListener("focus", function(e) {
                n.isOpen && !n.nodes.form.contains(e.target) && n.toggleComplete(!1)
            }), window.document.addEventListener("click", function(e) {
                n.isOpen && !n.nodes.form.contains(e.target) && n.toggleComplete(!1)
            }))) : CDC.debug && console.error("CDCSearchComplete: no parent form", this.element)) : CDC.debug && console.error("CDCSearchComplete: no element found", this.element)
        }
        return _createClass(a, [{
            key: "onQuery",
            value: function() {
                var t = this,
                    e = this.cleanTerm(this.element.value).toLowerCase(),
                    n = this.currentTerm;
                (this.currentTerm = e) || this.toggleComplete(!1), e.length < 2 || n !== e && $.ajax({
                    method: "get",
                    url: this.searchTypeaheadSolr,
                    data: {
                        q: this.currentTerm,
                        wt: "json",
                        rows: 5,
                        fl: "autocomplete_search_term"
                    },
                    dataType: "json"
                }).then(function(e) {
                    e = [].concat(null == e || null == (e = e.response) ? void 0 : e.docs).map(function(e) {
                        return e.autocomplete_search_term
                    });
                    t.onQueryResults(e)
                })
            }
        }, {
            key: "onCompleteKey",
            value: function(e) {
                switch (e.key) {
                    case "ArrowDown":
                        return e.preventDefault(), this.onCompleteNav(e, 1);
                    case "Tab":
                        if (this.isOpen) return e.preventDefault(), this.onCompleteNav(e, 1);
                        break;
                    case "ArrowUp":
                        return e.preventDefault(), this.onCompleteNav(e, -1);
                    case "Escape":
                        return this.element.focus(), this.toggleComplete(!1)
                }
            }
        }, {
            key: "onCompleteNav",
            value: function(e, t) {
                var n, a;
                this.isOpen && (n = e.target, this.nodes.searchComplete.contains(n) ? (a = this.nodes.searchCompleteResults.length - 1, (n = this.nodes.searchCompleteResults.indexOf(n) + t) < 0 ? n = a : a < n && (n = 0), null != (t = this.nodes.searchCompleteResults[n]) && t.focus()) : null != (a = this.nodes.searchCompleteResults[0]) && a.focus(), !0) && e.preventDefault()
            }
        }, {
            key: "onQueryResults",
            value: function(e) {
                var a = this,
                    t = (e = Array.isArray(e) ? e.slice(0, 5) : [], this.currentResults = e, this.nodes.searchComplete.innerHTML = "", CDC.Common.make("div", "", {}, "TOP RESULTS"));
                t.classList.add("topresults"), this.nodes.searchComplete.append(t), this.nodes.searchCompleteResults = [], e.length && e.forEach(function(e) {
                    var t, n;
                    (e = a.cleanTerm(e)) && (t = "".concat(a.searchResultsUrl, "?query=").concat(e), null != (n = a.search) && n.siteLimit && (t += "&sitelimit=".concat(a.search.siteLimit)), n = e.replace(new RegExp("(".concat(a.currentTerm, ")"), "gi"), "<b>$1</b>"), e = CDC.Common.make("a", "cdc-search-complete__result", {
                        href: t
                    }, n), a.nodes.searchComplete.append(e), a.nodes.searchCompleteResults.push(e), e.addEventListener("click", function() {
                        window.location = t
                    }), e.addEventListener("keyup", function(e) {
                        "Enter" === e.key && (window.location = t)
                    }))
                }), this.toggleComplete(e.length)
            }
        }, {
            key: "toggleComplete",
            value: function(e) {
                this.nodes.searchComplete.classList.toggle("show", !!e), this.nodes.form.classList.toggle("search-menu-open", !!e), document.body.classList.toggle("search-overlay-active", !!e), this.isOpen = !!e
            }
        }, {
            key: "cleanTerm",
            value: function(e) {
                return CDC.Common.cleanString(String(e).trim().replace(/["|;&$%#<>()+\?\~\*]/g, ""))
            }
        }]), a
    }(),
    CDCTemplates = (document.addEventListener("DOMContentLoaded", function() {
        document.querySelectorAll(".carousel").forEach(function(e) {
            function t() {
                e.querySelectorAll(".carousel-item a.btn").forEach(function(e) {
                    e.setAttribute("tabindex", e.closest(".carousel-item").classList.contains("active") ? "0" : "-1")
                })
            }
            t(), e.addEventListener("slid.bs.carousel", t), e.querySelectorAll(".carousel-indicators [data-bs-slide-to]").forEach(function(e) {
                e.setAttribute("tabindex", "0")
            })
        })
    }), function() {
        function e() {
            _classCallCheck(this, e), _defineProperty(this, "dfeTemplate", null), this.init()
        }
        return _createClass(e, [{
            key: "init",
            value: function() {
                var t = this;
                switch (this.dfeTemplate = CDC.Page.dfeTemplate, this.dfeTemplate) {
                    case "cdc_sitemap":
                        CDC.Page.on("navLoaded", function(e) {
                            return t.siteIndex()
                        });
                        break;
                    case "cdc_outbreak_homepage":
                        this.outbreakHomepage();
                        break;
                    case "cdc_events":
                        this.loadIcs()
                }
            }
        }, {
            key: "siteIndex",
            value: function() {
                var e, t = document.querySelector(".cdc-find-information"),
                    n = document.querySelectorAll(".cdc-dfe-sitemap__panes h2"),
                    a = CDC.Page.navigation.site,
                    o = a.sub_site_list_link,
                    i = a.group_site_short_title,
                    r = a.group_site_spanish_short_title,
                    s = a.sub_site_spanish_list_link,
                    a = a.super_site_enabled,
                    l = "View all",
                    c = (CDC.Page.isSpanish && "" !== s && (o = s, i = r, l = "View All"), ""),
                    d = _createForOfIteratorHelper(n);
                try {
                    for (d.s(); !(e = d.n()).done;) {
                        var u = e.value,
                            h = u.textContent,
                            m = u.id;
                        c += '<a href="#'.concat(m, '" class="btn btn-outline-secondary">').concat(h, ' <i class="cdc-fa-arrow-down-long"></i></a>')
                    }
                } catch (e) {
                    d.e(e)
                } finally {
                    d.f()
                }(!a && 1 < n.length || a) && null != t && t.prepend(CDC.make("div", "dfe-section dfe-section--page-summary", {}, '\n\t\t\t\t\t<div class="site-index-info">\n\t\t\t\t\t\t<div class="dfe-section__header">\n\t\t\t\t\t\t\t<h2>'.concat(CDC_Lang.__("Find Information"), '</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="dfe-section__content">\n\t\t\t\t\t\t\t<div class="d-flex flex-sm-row flex-column align-items-start">\n\t\t\t\t\t\t\t\t').concat(c, "\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t").concat(o ? '<div class="site-index-info-link">\n\t\t\t\t\t\t\t<a href="'.concat(o, '"> ').concat(CDC_Lang.__(l), " ").concat(i, " ").concat(CDC_Lang.__("pages"), '\n\t\t\t\t\t\t\t\t<i class="cdc-fa-light cdc-fa-angle-right" role="img" aria-hidden="true"></i>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t') : "", "\n\t\t\t\t")))
            }
        }, {
            key: "outbreakHomepage",
            value: function() {
                var n = document.querySelector(".dfe-section--page-summary .dfe-section__content"),
                    e = document.querySelectorAll(".dfe-section--feed .onThisPageAnchor");
                n && e.length && e.forEach(function(e) {
                    var t = CDC.Common.stripTags(e.getAttribute("title")),
                        e = e.getAttribute("id");
                    t && e && n.append(CDC.make("a", "btn btn-outline-secondary", {
                        href: "#".concat(e)
                    }, "".concat(t, ' <i class="cdc-fa-arrow-down-long"></i>')))
                })
            }
        }, {
            key: "loadIcs",
            value: function() {
                var e = document.querySelector(".add2_calendar a");
                CDC_POST.event && e && (e.href = this.makeIcsFile(), e.download = "event.ics", e.removeAttribute("hidden"))
            }
        }, {
            key: "makeIcsFile",
            value: function() {
                function e(e) {
                    var t = (e = _slicedToArray(e.split(" "), 2))[0],
                        e = e[1],
                        n = (t = _slicedToArray(t.split(":").map(Number), 2))[0],
                        t = t[1];
                    return 12 === n && (n = 0), "PM" === e && (n += 12), "".concat(n.toString().padStart(2, "0"), ":").concat(t.toString().padStart(2, "0"))
                }

                function t(e) {
                    var t, n, a, o, i, r;
                    if (e instanceof Date) return r = function(e) {
                        return String(e).padStart(2, "0")
                    }, t = e.getFullYear(), n = r(e.getMonth() + 1), a = r(e.getDate()), o = r(e.getHours()), i = r(e.getMinutes()), r = r(e.getSeconds()), "".concat(t).concat(n).concat(a, "T").concat(o).concat(i).concat(r);
                    throw new Error("Invalid Date")
                }
                var n, a = CDC_POST.event,
                    o = a.startDate;
                switch (null == (i = a.tz) ? void 0 : i.toLowerCase()) {
                    case "et":
                        n = "America/New_York";
                        break;
                    case "ct":
                        n = "America/Chicago";
                        break;
                    case "mt":
                        n = "America/Denver";
                        break;
                    case "pt":
                        n = "America/Los_Angeles";
                        break;
                    case "ak":
                        n = "America/Anchorage";
                        break;
                    case "hi":
                        n = "America/Los_Angeles";
                        break;
                    default:
                        n = "Pacific/Honolulu"
                }
                var i = e(a.startTime),
                    o = new Date(o).toISOString().split("T")[0],
                    o = t(new Date(o + "T" + i)),
                    i = a.endDate,
                    r = e(a.endTime),
                    r = (i = new Date(i).toISOString().split("T")[0]) ? t(new Date(i + "T" + r)) : "",
                    s = (h = (new Date).toISOString(), h = new Date(h), s = h.getUTCFullYear(), l = ("0" + (h.getUTCMonth() + 1)).slice(-2), c = ("0" + h.getUTCDate()).slice(-2), d = ("0" + h.getUTCHours()).slice(-2), u = ("0" + h.getUTCMinutes()).slice(-2), h = ("0" + h.getUTCSeconds()).slice(-2), "".concat(s).concat(l).concat(c, "T").concat(d).concat(u).concat(h, "Z")),
                    l = a.location.address1,
                    c = a.location.location_name,
                    d = a.location.address2,
                    u = a.location.city,
                    h = a.location.state,
                    m = a.location.zip,
                    p = Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15),
                    f = a.title || "",
                    C = "",
                    g = a.registration_url,
                    g = (g && (C += "Register: ".concat(g, "\\n\\n")), a.location.online_label),
                    v = a.location.online_url,
                    g = (g && v && (C += "".concat("online" === g ? "Join Online" : "Participate Now", ": ").concat(v, "\\n\\n")), []),
                    v = (c && g.push(c), l && g.push(l), d && g.push(d), u && g.push(u), h && g.push(h), m && g.push(m), g.length ? g.join(" ") : ""),
                    c = "BEGIN:VCALENDAR\nPRODID:-//CDC//WCMS//EN\nVERSION:2.0\nMETHOD:PUBLISH\nX-MS-OLK-FORCEINSPECTOROPEN:TRUE\nBEGIN:VEVENT\nCLASS:PUBLIC\nCREATED:" + s + "\nDTSTAMP:" + s + "\nDTSTART;TZID=" + n + ":" + o + "\n" + (i ? "DTEND;TZID=" + n + ":" + r + "\n" : "") + "LAST-MODIFIED:" + s + "\n" + ((v = v.replace(/"/g, '\\"')) ? "LOCATION:" + v + "\n" : "") + "DESCRIPTION:" + C + "\nSUMMARY:" + f + "\nTRANSP:OPAQUE\nUID:" + p + "\nURL:" + a.permalink + "\nEND:VEVENT\nEND:VCALENDAR\n",
                    l = new File([c], {
                        type: "text/plain"
                    });
                return null !== this.icsFile && window.URL.revokeObjectURL(this.icsFile), this.icsFile = window.URL.createObjectURL(l), this.icsFile
            }
        }]), e
    }()),
    CDCViewport = function() {
        function e() {
            _classCallCheck(this, e)
        }
        return _createClass(e, [{
            key: "getBreakpoint",
            value: function() {
                return getComputedStyle(document.querySelector("html"), ":before").getPropertyValue("content")
            }
        }, {
            key: "getBreakpointValue",
            value: function() {
                return parseInt(this.getBreakpoint().split(",")[1])
            }
        }, {
            key: "isMobile",
            value: function() {
                return parseInt(this.getBreakpointValue()) < 2
            }
        }, {
            key: "isDesktop",
            value: function() {
                return 2 < parseInt(this.getBreakpointValue())
            }
        }]), e
    }(),
    CDCPage = (CDC.Viewport = new CDCViewport, function() {
        function a() {
            var n = this;
            _classCallCheck(this, a), _defineProperty(this, "elements", {}), _defineProperty(this, "lang", a.ENGLISH), _defineProperty(this, "postId", 0), _defineProperty(this, "siteId", 0), _defineProperty(this, "context", ""), _defineProperty(this, "pid", ""), _defineProperty(this, "audience", a.AUDIENCE_GEN), _defineProperty(this, "tax", {}), _defineProperty(this, "altLangs", []), _defineProperty(this, "config", {}), _defineProperty(this, "syndicated", !1), _defineProperty(this, "dfeTemplate", null), this.events = new CDCEvents, this.on = function(e, t) {
                return n.events.on(e, t)
            }, this.once = function(e, t) {
                return n.events.once(e, t)
            }, this.emit = function(e, t) {
                return n.events.emit(e, t)
            }, window.addEventListener("load", function() {
                n.init()
            }), document.addEventListener("DOMContentLoaded", function() {
                var n = document.querySelectorAll(".atoz-characters li a");
                n.forEach(function(t) {
                    var e = t.getAttribute("href").replace("#heading-", "");
                    document.getElementById("heading-" + e) && (t.classList.remove("disabled-link"), t.classList.add("enabled"), t.setAttribute("aria-label", "Link to ".concat(e.toUpperCase()))), t.addEventListener("click", function(e) {
                        n.forEach(function(e) {
                            e.classList.remove("selected")
                        }), t.classList.add("selected")
                    })
                })
            })
        }
        return _createClass(a, [{
            key: "init",
            value: function() {
                var e;
                this.elements = {
                    toTopButton: document.querySelector(".cdc-page-to-top"),
                    otp: document.querySelector(".on-this-page.show")
                }, this.emit("init"), null != (e = document.body) && null != (e = e.classList) && e.remove("no-js"), this.loadProperties();
                try {
                    this.loadFeatures()
                } catch (e) {
                    console.error("Failed loading features:", e)
                }
                this.attachEvents(), CDCModules.load(), this.emit("ready"), document.dispatchEvent(new Event("cdcready")), this.init = !1
            }
        }, {
            key: "isEnglish",
            get: function() {
                return this.lang === a.ENGLISH
            }
        }, {
            key: "isSpanish",
            get: function() {
                return this.lang === a.SPANISH
            }
        }, {
            key: "loadProperties",
            value: function() {
                var e, t = String((null == (e = document.querySelector("html")) ? void 0 : e.getAttribute("lang")) || "en").trim().toLocaleLowerCase();
                if (t) switch (t) {
                    case "es-us":
                    case "es":
                        this.lang = a.SPANISH;
                        break;
                    case "en-us":
                    case "en":
                        this.lang = a.ENGLISH;
                        break;
                    default:
                        this.lang = t.replace(/^.*\-/, "")
                }
                "object" === _typeof(window.CDC_POST) && (this.pid = String(window.CDC_POST.id || "").trim(), e = _slicedToArray(this.pid.split(/[\-\_]+/).map(function(e) {
                    return parseInt(e)
                }), 2), this.siteId = e[0], this.postId = e[1], this.tax = Object.assign(this.tax, window.CDC_POST.tax), this.lang = this.lang || window.CDC_POST.lang, this.context = window.CDC_POST.context, window.CDC_POST.alt_langs && (this.altLangs = this.altLangs.concat(window.CDC_POST.alt_langs)), a.AUDIENCES.includes(window.CDC_POST.audience) && (this.audience = window.CDC_POST.audience), this.type = window.CDC_POST.type), this.config = Object.assign({}, this.config, window.CDC_CONFIG), this.dfeTemplate = (null == (e = document.querySelector('meta[property="cdc:dfe_content_type"]')) ? void 0 : e.getAttribute("content")) || null, this.syndicated = null == (e = document.body) || null == (e = e.classList) ? void 0 : e.contains("syndicated-content")
            }
        }, {
            key: "loadFeatures",
            value: function() {
                try {
                    this.uswdsBanner = new USWDSBanner
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.topMenu = new CDCTopMenu
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.mobileMenu = new CDCMobileMenu
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.search = new CDCSearch
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.bottomMenu = new CDCBottomMenu
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.scrollProgress = new CDCScrollProgress
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.navigation = new CDCNavigation
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.templates = new CDCTemplates
                } catch (e) {
                    console.error(e)
                }
                try {
                    this.features = new CDCFeatures
                } catch (e) {
                    console.error(e)
                }
            }
        }, {
            key: "attachEvents",
            value: function() {
                var e = this;
                this.positionOTP(!0), window.addEventListener("resize", function() {
                    e.positionOTP(!1)
                })
            }
        }, {
            key: "positionOTP",
            value: function(e) {
                this.elements.otp && (this.elements.otp.style.marginTop = document.querySelector("#content p").offsetTop - document.querySelector("#content").offsetTop + "px", e) && this.elements.otp.classList.add("show")
            }
        }, {
            key: "getElement",
            value: function(e) {
                return (this.elements || null)[e]
            }
        }, {
            key: "debug",
            value: function() {
                console.debug(arguments)
            }
        }]), a
    }());
_defineProperty(CDCPage, "ENGLISH", "en"), _defineProperty(CDCPage, "SPANISH", "es"), _defineProperty(CDCPage, "AUDIENCE_GEN", "gen"), _defineProperty(CDCPage, "AUDIENCE_HCP", "hcp"), _defineProperty(CDCPage, "AUDIENCE_PHP", "php"), _defineProperty(CDCPage, "AUDIENCES", [CDCPage.AUDIENCE_GEN, CDCPage.AUDIENCE_HCP, CDCPage.AUDIENCE_PHP]), window.CDC && CDC.Page || (CDC.Page = new CDCPage);